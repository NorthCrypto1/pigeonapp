{"version":3,"sources":["profile-page/createAccount.js","profile-page/login.js","profile-page/profile.js","messenger-page/message.js","messenger-page/displayChat.js","messenger-page/messenger-navigation.js","messenger-page/messageSend.js","messenger-page/selectUser.js","messenger-page/addUser.js","messenger-page/messenger.js","serviceWorker.js","index.js","App.js"],"names":["useStyles","makeStyles","theme","_Login","margin","spacing","Login","width","Object","defineProperty","breakpoints","up","CreateAccount","props","classes","_React$useState","React","useState","_React$useState2","slicedToArray","hideLogin","setHideLogin","style","display","react_default","a","createElement","className","Fab","variant","size","color","aria-label","onClick","e","whenCreateClose","Close_default","for","type","name","placeholder","_React$useState3","_React$useState4","register","setRegister","createNewAccount","whenClose","_root","_list","_listOpen","_toolbarOpen","root","list","flexDirection","maxWidth","listOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","listItem","height","boxShadow","marginBottom","background","listText","marginLeft","listTextOpen","toolbar","toolbarOpen","alignItems","justifyContent","backgroundColor","button","Icon","IconOpen","Profile","_clsx","_clsx2","_clsx3","_clsx4","_clsx5","_clsx6","_clsx7","_clsx8","loggedIn","setLoggedIn","selectedIndex","setSelectedIndex","_React$useState5","_React$useState6","open","setOpen","_React$useState7","_React$useState8","signIn","setSignIn","_React$useState9","gilad","jason","antoine","_React$useState10","state","setState","handleChange","event","objectSpread","target","checked","handleListItemClick","index","openSignIn","handleCloseChange","login_Login","loginPage","Button","Avatar","clsx","IconButton","ChevronLeft_default","List","ListItem","selected","Tune_default","ListItemText","LockOpen_default","NotificationsActive_default","FormControl","component","FormGroup","FormControlLabel","control","Switch","onChange","value","label","Message","_ref","senderId","text","messageNumber","node","useRef","_useState","_useState2","number","handleClick","current","contains","useEffect","document","addEventListener","removeEventListener","id","ref","elem","getElementById","parentNode","removeChild","Chat","chatText","chat","user","el","createRef","$","ready","each","original","this","html","converted","emojione","toImage","scrollIntoView","map","message","messenger_page_message","key","appBar","zIndex","drawer","leavingScreen","appBarShift","concat","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","padding","mixins","content","flexGrow","avatar","left","orangeAvatar","paddingBottom","info","position","top","MiniDrawer","useTheme","horizontal","vertical","infoSelect","setInfoSelect","_React$useState11","_React$useState12","checkedA","setCheckedA","CssBaseline","AppBar","Toolbar","edge","Menu_default","Typography","noWrap","Info_default","Checkbox","Drawer","paper","direction","ChevronRight_default","Divider","friendList","friends","friend","muted","ListItemIcon","Badge","max","badgeContent","Math","floor","random","anchorOrigin","slice","primary","emojiClicker","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","commandHistory","handleTextChange","bind","assertThisInitialized","keyPress","setWrapperRef","handleClickOutside","wrapperRef","revealLogin","emoji","val","shortname","image","currentSrc","keyCode","console","log","newArray","push","onKeyDown","class","alt","title","src","Picker_default","onEmojiSelected","logEmoji","Component","suggestions","renderInputComponent","inputProps","_inputProps$inputRef","inputRef","other","objectWithoutProperties","TextField","assign","fullWidth","InputProps","input","renderSuggestion","suggestion","query","isHighlighted","matches","match","parts","parse","MenuItem","part","fontWeight","highlight","getSuggestionValue","container","suggestionsContainerOpen","marginTop","right","suggestionsList","listStyleType","divider","IntegrationAutosuggest","single","popper","stateSuggestions","setSuggestions","autosuggestProps","onSuggestionsFetchRequested","_ref2","inputValue","deburr","trim","toLowerCase","inputLength","length","count","filter","keep","getSuggestions","onSuggestionsClearRequested","dist_default","_ref3","newValue","renderSuggestionsContainer","options","Paper","containerProps","square","children","addRoom","bottom","addRoomClosed","fab","createMuiTheme","palette","light","main","dark","secondary","AddUser","clicks","addClicks","Add_default","ThemeProvider","addFriends","Messenger","Friends","newName","messageSend","Boolean","window","location","hostname","ReactDOM","render","setValue","handlePages","BottomNavigation","page","BottomNavigationAction","icon","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.20115b0f.chunk.js","sourcesContent":["import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    Login: {\r\n        margin: 'auto',\r\n        width: '300px',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width: '800px',\r\n        },\r\n    }\r\n}));\r\n\r\n\r\nexport default function CreateAccount(props) {\r\n    const classes = useStyles();\r\n    const [hideLogin, setHideLogin] = React.useState(false);\r\n    const style = hideLogin ? { display: 'none' } : {};\r\n\r\n    function handleChange(e) {\r\n        setHideLogin(true);\r\n        props.whenCreateClose(false);\r\n    }\r\n\r\n    return <div className={`Login ` + classes.Login} style={style} >\r\n        <Fab\r\n            variant=\"extended\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            className={classes.margin + ` exit`}\r\n            onClick={handleChange}\r\n        ><CloseIcon /></Fab>\r\n        <div className=\"qwe\">\r\n            <div className=\"sign-in-title\">Register</div>\r\n            <form>\r\n                <div className=\"text\">\r\n                    <label for=\"username\">Create Username</label><br />\r\n                    <input type=\"text\" name=\"Uname\" placeholder=\"Create Username\" className=\"login-text s-center\" /><br />\r\n                </div>\r\n                <div className=\"text\">\r\n                    <label for=\"username\">Password</label><br />\r\n                    <input type=\"text\" name=\"Uname\" placeholder=\"Enter Password\" className=\"login-text s-center\" /><br />\r\n                </div>\r\n                <div className=\"text\">\r\n                    <label for=\"password\">Confirm Password</label><br />\r\n                    <input type=\"text\" name=\"Pname\" placeholder=\"Confirm Password\" className=\"login-text s-center\" /><br />\r\n                </div>\r\n                <button type=\"submit\" className=\"continue s-center\"><span>Continue</span></button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport './login.css';\r\nimport CreateAccount from './createAccount';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    Login: {\r\n        margin: 'auto',\r\n        width: '300px',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width: '800px',\r\n        },\r\n    }\r\n}));\r\n\r\nexport default function Login(props) {\r\n    const classes = useStyles();\r\n    const [hideLogin, setHideLogin] = React.useState(false);\r\n    const style = hideLogin ? { display: 'none' } : {};\r\n    const [register, setRegister] = React.useState(false);\r\n    const createNewAccount = register ? <CreateAccount whenCreateClose={handleCloseChange} /> : <div></div>;\r\n\r\n    function handleChange(e) {\r\n        setHideLogin(true);\r\n        props.whenClose(false);\r\n    }\r\n\r\n    function handleCloseChange(e) {\r\n        props.whenClose(e);\r\n    }\r\n\r\n    function createNew() {\r\n        setRegister(true);\r\n        setHideLogin(true);\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            {createNewAccount}\r\n            <div className={`Login ` + classes.Login} style={style} >\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    aria-label=\"add\"\r\n                    className={classes.margin + ` exit`}\r\n                    onClick={handleChange}\r\n                ><CloseIcon /></Fab>\r\n                <div className=\"qwe\">\r\n                    <div className=\"sign-in-title\">Sign In</div>\r\n                    <form>\r\n                        <div className=\"text\">\r\n                            <label for=\"username\">Username</label><br />\r\n                            <input type=\"text\" name=\"Uname\" placeholder=\"Enter Username\" className=\"login-text s-center\" /><br />\r\n                        </div>\r\n                        <div className=\"text\">\r\n                            <label for=\"password\">Password</label><br />\r\n                            <input type=\"text\" name=\"Pname\" placeholder=\"Enter Password\" className=\"login-text s-center\" /><br />\r\n                        </div>\r\n                        <div className=\"createButton\" onClick={createNew}>Don't have an account? Click here to create one</div>\r\n                        <button type=\"submit\" className=\"continue s-center\"><span>Continue</span></button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport './profile.css';\r\nimport Login from './login';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport List from '@material-ui/core/List';\r\nimport clsx from 'clsx';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Button from '@material-ui/core/Button';\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: 'auto',\r\n        width: '300px',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width: '800px',\r\n        },\r\n    },\r\n    list: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        maxWidth: '300px',\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            maxWidth: '800px',\r\n        },\r\n    },\r\n    listOpen: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n        maxWidth: '300px',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            maxWidth: '800px',\r\n        },\r\n    },\r\n    listItem: {\r\n        height: 90,\r\n        boxShadow: '2px 2px 3px 0px rgba(0,0,0,0.75)',\r\n        marginBottom: 5,\r\n        background: '#d9d8d7',\r\n    },\r\n    listText: {\r\n        margin: 'auto',\r\n        marginLeft: 25,\r\n    },\r\n    listTextOpen: {\r\n        display: 'none',\r\n    },\r\n    toolbar: {\r\n        display: 'none',\r\n    },\r\n    toolbarOpen: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        backgroundColor: '#618fe8',\r\n        height: 40,\r\n        maxWidth: '300px',\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            maxWidth: '800px',\r\n        },\r\n    },\r\n    button: {\r\n        margin: 'auto',\r\n        width: '100%',\r\n    },\r\n    Icon: {\r\n        margin: 0,\r\n    },\r\n    IconOpen: {\r\n        margin: 'auto',\r\n    }\r\n\r\n}))\r\n\r\nexport default function Profile() {\r\n    const classes = useStyles();\r\n    const [loggedIn, setLoggedIn] = React.useState(true);\r\n    const [selectedIndex, setSelectedIndex] = React.useState('');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [signIn, setSignIn] = React.useState(false);\r\n    const [state, setState] = React.useState({\r\n        gilad: true,\r\n        jason: false,\r\n        antoine: true,\r\n    });\r\n\r\n    const handleChange = name => event => {\r\n        setState({ ...state, [name]: event.target.checked });\r\n    };\r\n\r\n    function handleListItemClick(event, index) {\r\n        setSelectedIndex(index);\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleListClose() {\r\n        setOpen(false);\r\n        setSelectedIndex('');\r\n    }\r\n    function openSignIn() {\r\n        setSignIn(true);\r\n    }\r\n\r\n    function logged() {\r\n        if (loggedIn !== true) {\r\n            return <Button variant=\"contained\" className={classes.button + ` profile-login`} onClick={openSignIn}>Sign In/Log In</Button>\r\n        } else {\r\n            return <div className=\"profile-avatar\"><Avatar>H</Avatar>\r\n                <span>Username</span><span className=\"logout\" onClick={() => { setLoggedIn(false); }}>Log Out</span></div>\r\n        }\r\n    }\r\n\r\n    function handleCloseChange(e) {\r\n        setSignIn(e);\r\n    }\r\n\r\n    function loginPage() {\r\n        if (signIn === true) {\r\n            return (<Login whenClose={handleCloseChange}></Login>)\r\n        }\r\n    }\r\n\r\n    function settingsPageChange() {\r\n        if (selectedIndex === 'Display') {\r\n            return <FormControl component=\"fieldset\">\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" color=\"#23d160\" />}\r\n                        label=\"Dark Mode\"\r\n                    />\r\n                </FormGroup>\r\n            </FormControl>\r\n        } else if (selectedIndex === 'Privacy') {\r\n            return <FormControl component=\"fieldset\">\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" color=\"#23d160\" />}\r\n                        label=\"Encrypt All Messages\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" color=\"#23d160\" />}\r\n                        label=\"Enable 30 Day Data Burn\"\r\n                    />\r\n                </FormGroup>\r\n            </FormControl>\r\n        } else if (selectedIndex === 'Notifications') {\r\n            return <FormControl component=\"fieldset\">\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" color=\"#23d160\" />}\r\n                        label=\"Enable Notifications Sound\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" color=\"#23d160\" />}\r\n                        label=\"Enable Unread Message Badge\"\r\n                    />\r\n                </FormGroup>\r\n            </FormControl>\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {loginPage()}\r\n            {logged()}\r\n            <div onClick={handleListClose} className={clsx(classes.toolbar, {\r\n                [classes.toolbarOpen]: open,\r\n                [classes.toolbar]: !open,\r\n            })}>\r\n                <IconButton >\r\n                    <ChevronLeftIcon />\r\n                </IconButton>\r\n            </div>\r\n            <List className={clsx(classes.list, {\r\n                [classes.listOpen]: open,\r\n                [classes.list]: !open,\r\n            })}>\r\n                <ListItem button className={classes.listItem} selected={selectedIndex === 'Display'}\r\n                    onClick={event => handleListItemClick(event, 'Display')}>\r\n                    <TuneIcon className={clsx({\r\n                        [classes.IconOpen]: open,\r\n                        [classes.Icon]: !open,\r\n                    })} /><ListItemText className={clsx({\r\n                        [classes.listTextOpen]: open,\r\n                        [classes.listText]: !open,\r\n                    })} >Display</ListItemText>\r\n                </ListItem>\r\n                <ListItem button className={classes.listItem} selected={selectedIndex === 'Privacy'}\r\n                    onClick={event => handleListItemClick(event, 'Privacy')}>\r\n                    <LockOpenIcon className={clsx({\r\n                        [classes.IconOpen]: open,\r\n                        [classes.Icon]: !open,\r\n                    })} /> <ListItemText className={clsx({\r\n                        [classes.listTextOpen]: open,\r\n                        [classes.listText]: !open,\r\n                    })} >Privacy</ListItemText>\r\n                </ListItem>\r\n                <ListItem button className={classes.listItem} selected={selectedIndex === 'Notifications'}\r\n                    onClick={event => handleListItemClick(event, 'Notifications')}>\r\n                    <NotificationsActiveIcon className={clsx({\r\n                        [classes.IconOpen]: open,\r\n                        [classes.Icon]: !open,\r\n                    })} /><ListItemText className={clsx({\r\n                        [classes.listTextOpen]: open,\r\n                        [classes.listText]: !open,\r\n                    })} >Notifications</ListItemText>\r\n                </ListItem>\r\n            </List>\r\n            <div>\r\n                {settingsPageChange()}\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Message = ({ senderId, text, messageNumber }) => {\r\n    const node = useRef();\r\n    const [open, setOpen] = useState(false);\r\n    const number = messageNumber + 'message';\r\n\r\n    const handleClick = e => {\r\n        if (node.current.contains(e.target)) {\r\n            // inside click\r\n            return;\r\n        }\r\n        // outside click\r\n        setOpen(false);\r\n    };\r\n\r\n    //const handleChange = selectedValue => {\r\n    //    onChange(selectedValue);\r\n    //   setOpen(false);\r\n    //};\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", handleClick);\r\n\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClick);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <li className={`message ` + senderId} id={number}>\r\n            <p className=\"message-text one\" >{text}</p>\r\n            <div ref={node} className=\"dropdown\">\r\n                <span onClick={e => setOpen(!open)}>. . .</span>\r\n                {open && (\r\n                    <div className=\"dropdown-menu\">\r\n                        <Button\r\n                            color=\"secondary\"\r\n                            className=\"dropdown-item\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                var elem = document.getElementById(number);\r\n                                return elem.parentNode.removeChild(elem);\r\n                            }}\r\n                        >Delete</Button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Message;","import React, { useEffect } from 'react';\r\nimport emojione from 'emojione';\r\nimport $ from \"jquery\";\r\nimport Message from './message';\r\n\r\nexport default function Chat(props) {\r\n    const chatText = props.chat;\r\n    const user = props.user;\r\n    let el = React.createRef();\r\n\r\n    useEffect(() => {\r\n        $(document).ready(function () {\r\n            $(\".message-text\").each(function () {\r\n                var original = $(this).html();\r\n                var converted = emojione.toImage(original);\r\n                $(this).html(converted);\r\n            });\r\n        });\r\n        el.current.scrollIntoView();\r\n    })\r\n\r\n    function userSort(value) {\r\n        if (value === user) {\r\n            return 'you'\r\n        } else {\r\n            return 'other'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"displayConversation\" >\r\n            <ul >\r\n                {chatText.map((message, index) => (\r\n                    <Message\r\n                        key={index}\r\n                        senderId={userSort(message.senderId)}\r\n                        text={message.text}\r\n                        messageNumber={index}\r\n                    />\r\n                ))}\r\n                <div ref={el} />\r\n            </ul>\r\n        </div >\r\n    )\r\n\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    avatar: {\r\n        margin: 0,\r\n        left: -8,\r\n    },\r\n    orangeAvatar: {\r\n        left: -8,\r\n        margin: 0,\r\n        color: '#fff',\r\n        backgroundColor: '#ffdd57',\r\n    },\r\n    padding: {\r\n        paddingBottom: 24,\r\n    },\r\n    info: {\r\n        position: \"absolute\",\r\n        width: \"125px\",\r\n        height: \"50px\",\r\n        background: \"grey\",\r\n        top: \"50px\",\r\n        left: \"100px\",\r\n    }\r\n}));\r\n\r\nexport default function MiniDrawer(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(\"Messenger\");\r\n    const [horizontal, setHorizontal] = React.useState('left');\r\n    const [vertical, setVertical] = React.useState('top');\r\n    const [infoSelect, setInfoSelect] = React.useState(false);\r\n    const [checkedA, setCheckedA] = React.useState(false);\r\n\r\n\r\n    const handleChange = name => event => {\r\n        if (checkedA !== true) {\r\n            setCheckedA(false);\r\n        } else {\r\n            setCheckedA(true);\r\n        }\r\n    };\r\n\r\n    function infoOpen() {\r\n        if (selectedIndex !== \"Messenger\" && infoSelect === false) {\r\n            setInfoSelect(true);\r\n        } else if (infoSelect === true) {\r\n            setInfoSelect(false);\r\n        }\r\n    }\r\n    function infoClose() {\r\n        if (infoSelect === true) {\r\n            setInfoSelect(false);\r\n        }\r\n    }\r\n\r\n    function handleListItemClick(event, index) {\r\n        setSelectedIndex(index.friend);\r\n        setCheckedA(index.muted);\r\n    }\r\n\r\n    function handleDrawerOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleDrawerClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    function slice(name) {\r\n        var x = name;\r\n        var y = x.slice(0, 1);\r\n        return (y)\r\n    }\r\n    function randomNumber() {\r\n        var y = Math.floor(Math.random() * 101)\r\n        return y\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        {selectedIndex}\r\n                    </Typography>\r\n                    <IconButton className={classes.button} onClick={infoOpen} aria-label=\"delete\" color=\"primary\"><InfoIcon /></IconButton>\r\n                    <div className={clsx({\r\n                        [classes.info]: infoSelect,\r\n                        [classes.hide]: !infoSelect,\r\n                    })} >\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox checked={checkedA} onChange={handleChange('checkedA')} value=\"checkedA\" />\r\n                            }\r\n                            label=\"Mute Chat\"\r\n                        />\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n\r\n                <List className={classes.padding}>\r\n                    {props.friendList.friends.map((text, index) => (\r\n                        <ListItem button key={index} selected={selectedIndex === text.friend} onClick={event => handleListItemClick(event, text)}>\r\n                            <ListItemIcon>\r\n                                <Badge\r\n                                    color=\"secondary\"\r\n                                    max={99}\r\n                                    badgeContent={randomNumber(index)}\r\n                                    anchorOrigin={{\r\n                                        horizontal,\r\n                                        vertical,\r\n                                    }}\r\n                                ><Avatar className={index % 2 === 0 ? classes.avatar : classes.orangeAvatar}>{slice(text.friend)}</Avatar></Badge></ListItemIcon>\r\n                            <ListItemText primary={text.friend} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n            </main>\r\n        </div >\r\n    );\r\n}","import React from 'react';\r\nimport Picker from 'react-emojipicker';\r\nimport './messagingSend.css';\r\n\r\nlet emojiClicker = \"https://cdn.jsdelivr.net/emojione/assets/png/1f600.png?v=2.2.7\";\r\n\r\nclass Login extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            commandHistory: [],\r\n            value: '',\r\n        };\r\n        this.handleTextChange = this.handleTextChange.bind(this);\r\n        this.keyPress = this.keyPress.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef.bind(this);\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    setWrapperRef(node) {\r\n        this.wrapperRef = node;\r\n    }\r\n\r\n    handleTextChange(e) {\r\n        this.setState({\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    handleChange() {\r\n        if (this.state.revealLogin === false) {\r\n            this.setState({ revealLogin: true });\r\n        } else {\r\n            this.setState({ revealLogin: false });\r\n        }\r\n    }\r\n\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target) && this.state.revealLogin === true) {\r\n            this.setState({ revealLogin: false });\r\n        }\r\n    }\r\n\r\n    logEmoji(emoji) {\r\n        const val = this.state.value + \" \" + emoji.shortname + \" \";\r\n        this.setState({ value: val })\r\n        emojiClicker = emoji.image.currentSrc;\r\n    }\r\n    keyPress(e) {\r\n        if (e.keyCode === 13) {\r\n            console.log(e.target.value);\r\n            var newArray = this.state.commandHistory;\r\n            newArray.push(e.target.value);\r\n            this.setState({\r\n                commandHistory: newArray,\r\n                value: ''\r\n            });\r\n            console.log(this.state.commandHistory);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const style = this.state.revealLogin ? {} : { display: 'none' };\r\n        return (\r\n            <div className=\"messagingSend\">\r\n                <div id=\"send\">\r\n                    <textarea value={this.state.value} onKeyDown={this.keyPress} onChange={this.handleTextChange} id=\"input\" ></textarea>\r\n                    <div className=\"submit\"><span>Send</span></div>\r\n                    <div onClick={this.handleChange} className=\"emojiButton\" ><img class=\"emojiClicker\" alt=\"😀\" title=\":grinning:\" src={emojiClicker}></img> </div>\r\n                </div>\r\n                <div className=\"emojiBox123\" style={style} ref={this.setWrapperRef} >\r\n                    <Picker onEmojiSelected={this.logEmoji.bind(this)} />\r\n                    <div className=\"closeBottom\" onClick={this.handleChange}></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Login;","import React from 'react';\r\nimport deburr from 'lodash/deburr';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport match from 'autosuggest-highlight/match';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst suggestions = [\r\n    { label: 'NeonNexus' },\r\n    { label: 'Peristeri' },\r\n    { label: 'KenBot' },\r\n    { label: 'NickKliesen' },\r\n    { label: 'Cryptomaniac' },\r\n    { label: 'ShadowHunter117' },\r\n    { label: 'bztianjiao' },\r\n]\r\n\r\nfunction renderInputComponent(inputProps) {\r\n    const { classes, inputRef = () => { }, ref, ...other } = inputProps;\r\n\r\n    return (\r\n        <TextField\r\n            fullWidth\r\n            InputProps={{\r\n                inputRef: node => {\r\n                    ref(node);\r\n                    inputRef(node);\r\n                },\r\n                classes: {\r\n                    input: classes.input,\r\n                },\r\n            }}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n    const matches = match(suggestion.label, query);\r\n    const parts = parse(suggestion.label, matches);\r\n\r\n    return (\r\n        <MenuItem selected={isHighlighted} component=\"div\">\r\n            <div>\r\n                {parts.map(part => (\r\n                    <span key={part.text} style={{ fontWeight: part.highlight ? 500 : 400 }}>\r\n                        {part.text}\r\n                    </span>\r\n                ))}\r\n            </div>\r\n        </MenuItem>\r\n    );\r\n}\r\n\r\nfunction getSuggestions(value) {\r\n    const inputValue = deburr(value.trim()).toLowerCase();\r\n    const inputLength = inputValue.length;\r\n    let count = 0;\r\n\r\n    return inputLength === 0\r\n        ? []\r\n        : suggestions.filter(suggestion => {\r\n            const keep =\r\n                count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n            if (keep) {\r\n                count += 1;\r\n            }\r\n\r\n            return keep;\r\n        });\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n    return suggestion.label;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: 250,\r\n        flexGrow: 1,\r\n    },\r\n    container: {\r\n        position: 'relative',\r\n    },\r\n    suggestionsContainerOpen: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        marginTop: theme.spacing(1),\r\n        left: 0,\r\n        right: 0,\r\n    },\r\n    suggestion: {\r\n        display: 'block',\r\n    },\r\n    suggestionsList: {\r\n        margin: 0,\r\n        padding: 0,\r\n        listStyleType: 'none',\r\n    },\r\n    divider: {\r\n        height: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function IntegrationAutosuggest() {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        single: '',\r\n        popper: '',\r\n    });\r\n\r\n\r\n    const [stateSuggestions, setSuggestions] = React.useState([]);\r\n\r\n    const handleSuggestionsFetchRequested = ({ value }) => {\r\n        setSuggestions(getSuggestions(value));\r\n    };\r\n\r\n    const handleSuggestionsClearRequested = () => {\r\n        setSuggestions([]);\r\n    };\r\n\r\n    const handleChange = name => (event, { newValue }) => {\r\n        setState({\r\n            ...state,\r\n            [name]: newValue,\r\n        });\r\n    };\r\n\r\n    const autosuggestProps = {\r\n        renderInputComponent,\r\n        suggestions: stateSuggestions,\r\n        onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\r\n        onSuggestionsClearRequested: handleSuggestionsClearRequested,\r\n        getSuggestionValue,\r\n        renderSuggestion,\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Autosuggest\r\n                {...autosuggestProps}\r\n                inputProps={{\r\n                    classes,\r\n                    id: 'react-autosuggest-simple',\r\n                    label: 'Username',\r\n                    placeholder: 'Search Username',\r\n                    value: state.single,\r\n                    onChange: handleChange('single'),\r\n                }}\r\n                theme={{\r\n                    container: classes.container,\r\n                    suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n                    suggestionsList: classes.suggestionsList,\r\n                    suggestion: classes.suggestion,\r\n                }}\r\n                renderSuggestionsContainer={options => (\r\n                    <Paper {...options.containerProps} square>\r\n                        {options.children}\r\n                    </Paper>\r\n                )}\r\n            />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SelectUser from './selectUser';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    addRoom: {\r\n        position: 'absolute',\r\n        bottom: 57,\r\n        left: 56,\r\n        zIndex: 10000,\r\n        boxShadow: ' 1px -1px 2px 1px #209cee',\r\n        background: 'white',\r\n        height: 150,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n    },\r\n    addRoomClosed: {\r\n        display: 'none',\r\n    },\r\n    fab: {\r\n        backgroundColor: '209cee',\r\n        position: 'absolute',\r\n        bottom: 57,\r\n        left: 10,\r\n        zIndex: 100001,\r\n    },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#85edff',\r\n            main: '#209cee',\r\n            dark: '#2e77d5',\r\n        },\r\n        secondary: {\r\n            light: '#ff8099',\r\n            main: '#ff3860',\r\n            dark: '#ff0033',\r\n        },\r\n    },\r\n});\r\n\r\nexport default function AddUser(props) {\r\n    const classes = useStyles();\r\n    const [clicks, addClicks] = React.useState(0);\r\n    const [open, setOpen] = React.useState(false);\r\n    const style = open ? <span>Close</span> : <AddIcon />;\r\n    const color = open ? 'secondary' : 'primary';\r\n\r\n    function addRoom() {\r\n        if (clicks % 2 === 0) {\r\n            setOpen(true);\r\n        } else {\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    function onAddFriend() {\r\n        var elem = document.getElementById('react-autosuggest-simple').value;\r\n        props.addFriends(elem);\r\n        addClicks(clicks + 1);\r\n        addRoom();\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme} >\r\n            <Fab color={color} aria-label=\"add\" className={classes.fab} onClick={() => {\r\n                addClicks(clicks + 1);\r\n                addRoom();\r\n            }} >\r\n                {style}\r\n            </Fab>\r\n            <div className={clsx({\r\n                [classes.addRoom]: open,\r\n                [classes.addRoomClosed]: !open,\r\n            })\r\n            }>\r\n                <SelectUser\r\n                />\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={onAddFriend}>\r\n                    New Message\r\n      </Button>\r\n\r\n            </div>\r\n        </ ThemeProvider >\r\n    );\r\n}","import React from 'react';\r\nimport Chat from './DEMO-CHAT.json';\r\nimport DisplayChat from './displayChat';\r\nimport MessengerNavigation from './messenger-navigation';\r\nimport MessageSend from './messageSend';\r\nimport './chatDisplay.css';\r\nimport AddUser from './addUser';\r\nimport Friends from './messenger.json';\r\n\r\nexport default function Messenger(props) {\r\n    const user = props.name;\r\n    const chatText = Chat.chat\r\n    const friends = ['Michael', 'Jim', 'Pam', 'Dwight', 'Creed', 'Kevin', 'Angela', 'Ryan', 'Toby', 'Stanley', 'Kelly', 'Meredith']\r\n    function onChangeAddName(newName) {\r\n        friends.push(newName);\r\n    }\r\n\r\n    return (\r\n        <div className=\"messenger\">\r\n            <MessengerNavigation friendList={Friends} />\r\n            <AddUser\r\n                addFriends={onChangeAddName}\r\n            />\r\n            <MessageSend />\r\n            <DisplayChat chat={chatText} user={user} />\r\n        </div>\r\n    )\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from 'react';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Profile from './profile-page/profile';\r\nimport Messenger from './messenger-page/messenger';\r\n\r\n\r\nexport default function App() {\r\n  const [value, setValue] = React.useState('profile');\r\n\r\n  function handlePages(event, newValue) {\r\n    setValue(newValue)\r\n  }\r\n\r\n  function changePage() {\r\n    if (value === 'profile') {\r\n      return <Profile />\r\n    } else if (value === 'wallet') {\r\n      return <span>Favorites</span>\r\n    } else if (value === 'nearby') {\r\n      return <span>Nearby</span>\r\n    } else if (value === 'messenger') {\r\n      return <Messenger name=\"northcrypto\" />\r\n    }\r\n  }\r\n\r\n  function navigation() {\r\n    return (\r\n      <BottomNavigation value={value} onChange={handlePages} page={value}>\r\n        <BottomNavigationAction label=\"Profile\" value=\"profile\" icon={<Icon><img src=\"./icons/icons_identity.png\" className=\"icon-image\" alt=\"😀\" /></Icon>} />\r\n        <BottomNavigationAction label=\"Messenger\" value=\"messenger\" icon={<Icon><img src=\"./icons/icons_partners.png\" className=\"icon-image\" alt=\"📜\" /></Icon>} />\r\n      </BottomNavigation>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {changePage()}\r\n      {navigation()}\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"sourceRoot":""}