{"version":3,"sources":["profile-page/profile.js","messenger-page/displayChat.js","messenger-page/messenger-navigation.js","messenger-page/messageSend.js","messenger-page/selectUser.js","messenger-page/addUser.js","messenger-page/messenger.js","serviceWorker.js","index.js","App.js"],"names":["useStyles","makeStyles","theme","_root","_list","_listOpen","_toolbarOpen","root","margin","width","Object","defineProperty","breakpoints","up","list","display","flexDirection","maxWidth","listOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","listItem","height","boxShadow","listText","toolbar","toolbarOpen","alignItems","justifyContent","backgroundColor","Profile","_clsx","_clsx2","classes","_React$useState","React","useState","_React$useState2","slicedToArray","loggedIn","_React$useState3","_React$useState4","selectedIndex","setSelectedIndex","_React$useState5","_React$useState6","open","setOpen","_React$useState7","gilad","jason","antoine","_React$useState8","state","setState","handleChange","name","event","objectSpread","target","checked","react_default","a","createElement","className","Avatar","onClick","clsx","IconButton","ChevronLeft_default","List","map","text","index","ListItem","button","key","selected","ListItemText","FormControl","component","FormGroup","FormControlLabel","control","Switch","onChange","value","color","label","Chat","props","chatText","chat","user","el","createRef","useEffect","$","document","ready","each","original","this","html","converted","emojione","toImage","current","scrollIntoView","message","concat","senderId","ref","appBar","zIndex","drawer","leavingScreen","appBarShift","marginLeft","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","padding","mixins","content","flexGrow","avatar","left","orangeAvatar","MiniDrawer","_clsx3","_clsx4","useTheme","CssBaseline","AppBar","position","Toolbar","aria-label","edge","Menu_default","Typography","variant","noWrap","Drawer","paper","direction","ChevronRight_default","Divider","ListItemIcon","slice","primary","emojiClicker","Login","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","commandHistory","handleTextChange","bind","assertThisInitialized","keyPress","setWrapperRef","handleClickOutside","addEventListener","removeEventListener","node","wrapperRef","e","revealLogin","contains","emoji","val","shortname","image","currentSrc","keyCode","console","log","newArray","push","style","id","onKeyDown","class","alt","title","src","Picker_default","onEmojiSelected","logEmoji","Component","suggestions","suggestion","minWidth","marginTop","input","valueContainer","flexWrap","flex","overflow","chip","chipFocused","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","bottom","right","divider","inputComponent","_ref","inputRef","objectWithoutProperties","assign","components","Control","children","innerProps","innerRef","_props$selectProps","selectProps","TextFieldProps","TextField","fullWidth","InputProps","inputProps","Menu","Paper","square","MultiValue","Chip","tabIndex","isFocused","onDelete","removeProps","deleteIcon","Cancel_default","NoOptionsMessage","Option","MenuItem","fontWeight","isSelected","Placeholder","_props$innerProps","SingleValue","ValueContainer","IntegrationReactSelect","single","setSingle","selectStyles","base","& input","font","NoSsr","react_select_browser_esm","styles","inputId","InputLabelProps","htmlFor","shrink","options","addRoom","background","addRoomClosed","fab","createMuiTheme","light","main","dark","secondary","AddUser","clicks","addClicks","Add_default","ThemeProvider","Fab","Button","Messenger","messageSend","Boolean","window","location","hostname","match","ReactDOM","render","setValue","handlePages","newValue","BottomNavigation","page","BottomNavigationAction","icon","Icon","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.57c1b636.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './profile.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport List from '@material-ui/core/List';\r\nimport clsx from 'clsx';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: 'auto',\r\n        width: '300px',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width: '800px',\r\n        },\r\n    },\r\n    list: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        maxWidth: '300px',\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            maxWidth: '800px',\r\n        },\r\n    },\r\n    listOpen: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n        maxWidth: '300px',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            maxWidth: '800px',\r\n        },\r\n    },\r\n    listItem: {\r\n        height: 90,\r\n        boxShadow: '0px 1px 0px 0px rgba(0,0,0,0.75)',\r\n    },\r\n    listText: {\r\n        margin: 'auto',\r\n    },\r\n    toolbar: {\r\n        display: 'none',\r\n    },\r\n    toolbarOpen: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        backgroundColor: '#618fe8',\r\n        height: 40,\r\n        maxWidth: '300px',\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            maxWidth: '800px',\r\n        },\r\n    },\r\n}))\r\n\r\nexport default function Profile() {\r\n    const classes = useStyles();\r\n    const [loggedIn, setLoggedIn] = React.useState(true);\r\n    const [selectedIndex, setSelectedIndex] = React.useState('');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [state, setState] = React.useState({\r\n        gilad: true,\r\n        jason: false,\r\n        antoine: true,\r\n    });\r\n\r\n    const handleChange = name => event => {\r\n        setState({ ...state, [name]: event.target.checked });\r\n    };\r\n\r\n    function handleListItemClick(event, index) {\r\n        setSelectedIndex(index);\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleListClose() {\r\n        setOpen(false);\r\n        setSelectedIndex('');\r\n    }\r\n\r\n    function logged() {\r\n        if (loggedIn !== true) {\r\n            return <div className=\"profile-login-avatar\">Sign In/Log In</div>\r\n        } else {\r\n            return <div className=\"profile-avatar\"><Avatar>H</Avatar>\r\n                <span>Username</span><span>Log Out</span></div>\r\n        }\r\n    }\r\n\r\n    function settingsPageChange() {\r\n        if (selectedIndex === 'Display') {\r\n            return <FormControl component=\"fieldset\">\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" color=\"#23d160\" />}\r\n                        label=\"Dark Mode\"\r\n                    />\r\n                </FormGroup>\r\n            </FormControl>\r\n        } else if (selectedIndex === 'Privacy') {\r\n            return <FormControl component=\"fieldset\">\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" color=\"#23d160\" />}\r\n                        label=\"Encrypt All Messages\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" color=\"#23d160\" />}\r\n                        label=\"Enable 30 Day Data Burn\"\r\n                    />\r\n                </FormGroup>\r\n            </FormControl>\r\n        } else if (selectedIndex === 'Notifications') {\r\n            return <FormControl component=\"fieldset\">\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" color=\"#23d160\" />}\r\n                        label=\"Enable Notifications Sound\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" color=\"#23d160\" />}\r\n                        label=\"Enable Unread Message Badge\"\r\n                    />\r\n                </FormGroup>\r\n            </FormControl>\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {logged()}\r\n            <div onClick={handleListClose} className={clsx(classes.toolbar, {\r\n                [classes.toolbarOpen]: open,\r\n                [classes.toolbar]: !open,\r\n            })}>\r\n                <IconButton >\r\n                    <ChevronLeftIcon />\r\n                </IconButton>\r\n            </div>\r\n            <List className={clsx(classes.list, {\r\n                [classes.listOpen]: open,\r\n                [classes.list]: !open,\r\n            })}>\r\n                {['Display', 'Privacy', 'Notifications'].map((text, index) => (\r\n                    <ListItem button key={text} className={classes.listItem} selected={selectedIndex === text}\r\n                        onClick={event => handleListItemClick(event, text)}>\r\n                        <ListItemText className={classes.listText} >{text}</ListItemText>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <div>\r\n                {settingsPageChange()}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport emojione from 'emojione';\r\nimport $ from \"jquery\";\r\n\r\nexport default function Chat(props) {\r\n    const chatText = props.chat;\r\n    const user = props.user;\r\n    let el = React.createRef();\r\n\r\n    useEffect(() => {\r\n        $(document).ready(function () {\r\n            $(\".message-text\").each(function () {\r\n                var original = $(this).html();\r\n                var converted = emojione.toImage(original);\r\n                $(this).html(converted);\r\n            });\r\n        });\r\n        el.current.scrollIntoView();\r\n    })\r\n\r\n    function userSort(value) {\r\n        if (value === user) {\r\n            return ('you');\r\n        } else {\r\n            return ('other');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"displayConversation\" >\r\n            <ul >\r\n                {chatText.map((message, index) => (\r\n                    <li key={index} className={`message ${userSort(message.senderId)}`}>\r\n                        <p className=\"message-text one\" >{message.text}</p>\r\n                    </li>\r\n                ))}\r\n                <div ref={el} />\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    avatar: {\r\n        margin: 0,\r\n        left: -8,\r\n    },\r\n    orangeAvatar: {\r\n        left: -8,\r\n        margin: 0,\r\n        color: '#fff',\r\n        backgroundColor: '#ffdd57',\r\n    },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedIndex, setSelectedIndex] = React.useState('Messenger');\r\n\r\n    function handleListItemClick(event, index) {\r\n        setSelectedIndex(index);\r\n    }\r\n\r\n    function handleDrawerOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleDrawerClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    function slice(name) {\r\n        var x = name;\r\n        var y = x.slice(0, 1);\r\n        return (y)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        {selectedIndex}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n\r\n                <List>\r\n                    {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                        <ListItem button key={text} selected={selectedIndex === text} onClick={event => handleListItemClick(event, text)}>\r\n                            <ListItemIcon><Avatar className={index % 2 === 0 ? classes.avatar : classes.orangeAvatar}>{slice(text)}</Avatar></ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n            </main>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Picker from 'react-emojipicker';\r\nimport './messagingSend.css';\r\n\r\nlet emojiClicker = \"https://cdn.jsdelivr.net/emojione/assets/png/1f600.png?v=2.2.7\";\r\n\r\nclass Login extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            commandHistory: [],\r\n            value: '',\r\n        };\r\n        this.handleTextChange = this.handleTextChange.bind(this);\r\n        this.keyPress = this.keyPress.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef.bind(this);\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    setWrapperRef(node) {\r\n        this.wrapperRef = node;\r\n    }\r\n\r\n    handleTextChange(e) {\r\n        this.setState({\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    handleChange() {\r\n        if (this.state.revealLogin === false) {\r\n            this.setState({ revealLogin: true });\r\n        } else {\r\n            this.setState({ revealLogin: false });\r\n        }\r\n    }\r\n\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target) && this.state.revealLogin === true) {\r\n            this.setState({ revealLogin: false });\r\n        }\r\n    }\r\n\r\n    logEmoji(emoji) {\r\n        const val = this.state.value + \" \" + emoji.shortname + \" \";\r\n        this.setState({ value: val })\r\n        emojiClicker = emoji.image.currentSrc;\r\n    }\r\n    keyPress(e) {\r\n        if (e.keyCode === 13) {\r\n            console.log(e.target.value);\r\n            var newArray = this.state.commandHistory;\r\n            newArray.push(e.target.value);\r\n            this.setState({\r\n                commandHistory: newArray,\r\n                value: ''\r\n            });\r\n            console.log(this.state.commandHistory);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const style = this.state.revealLogin ? {} : { display: 'none' };\r\n        return (\r\n            <div className=\"messagingSend\">\r\n                <div id=\"send\">\r\n                    <textarea value={this.state.value} onKeyDown={this.keyPress} onChange={this.handleTextChange} id=\"input\" ></textarea>\r\n                    <div className=\"submit\"><span>Send</span></div>\r\n                    <div onClick={this.handleChange} className=\"emojiButton\" ><img class=\"emojiClicker\" alt=\"😀\" title=\":grinning:\" src={emojiClicker}></img> </div>\r\n                </div>\r\n                <div className=\"emojiBox123\" style={style} ref={this.setWrapperRef} >\r\n                    <Picker onEmojiSelected={this.logEmoji.bind(this)} />\r\n                    <div className=\"closeBottom\" onClick={this.handleChange}></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Login;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nconst suggestions = [\r\n    { label: 'NeonNexus' },\r\n    { label: 'Peristeri' },\r\n    { label: 'KenBot' },\r\n    { label: 'NickKliesen' },\r\n    { label: 'Cryptomaniac' },\r\n    { label: 'ShadowHunter117' },\r\n    { label: 'bztianjiao' },\r\n].map(suggestion => ({\r\n    value: suggestion.label,\r\n    label: suggestion.label,\r\n}));\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        minWidth: 290,\r\n        height: 52,\r\n        marginTop: 10,\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n    },\r\n    input: {\r\n        display: 'flex',\r\n        padding: 0,\r\n        height: 'auto',\r\n    },\r\n    valueContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5, 0.25),\r\n    },\r\n    chipFocused: {\r\n        backgroundColor: emphasize(\r\n            theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n            0.08,\r\n        ),\r\n    },\r\n    noOptionsMessage: {\r\n        padding: theme.spacing(1, 2),\r\n    },\r\n    singleValue: {\r\n        fontSize: 16,\r\n    },\r\n    placeholder: {\r\n        position: 'absolute',\r\n        left: 2,\r\n        bottom: 6,\r\n        fontSize: 16,\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        marginTop: theme.spacing(1),\r\n        left: 0,\r\n        right: 0,\r\n    },\r\n    divider: {\r\n        height: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n    return (\r\n        <Typography\r\n            color=\"textSecondary\"\r\n            className={props.selectProps.classes.noOptionsMessage}\r\n            {...props.innerProps}\r\n        >\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n    /**\r\n     * The children to be rendered.\r\n     */\r\n    children: PropTypes.node,\r\n    /**\r\n     * Props to be passed on to the wrapper.\r\n     */\r\n    innerProps: PropTypes.object.isRequired,\r\n    selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n    return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n    inputRef: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.shape({\r\n            current: PropTypes.any.isRequired,\r\n        }),\r\n    ]),\r\n};\r\n\r\nfunction Control(props) {\r\n    const {\r\n        children,\r\n        innerProps,\r\n        innerRef,\r\n        selectProps: { classes, TextFieldProps },\r\n    } = props;\r\n\r\n    return (\r\n        <TextField\r\n            fullWidth\r\n            InputProps={{\r\n                inputComponent,\r\n                inputProps: {\r\n                    className: classes.input,\r\n                    ref: innerRef,\r\n                    children,\r\n                    ...innerProps,\r\n                },\r\n            }}\r\n            {...TextFieldProps}\r\n        />\r\n    );\r\n}\r\n\r\nControl.propTypes = {\r\n    /**\r\n     * Children to render.\r\n     */\r\n    children: PropTypes.node,\r\n    /**\r\n     * The mouse down event and the innerRef to pass down to the controller element.\r\n     */\r\n    innerProps: PropTypes.shape({\r\n        onMouseDown: PropTypes.func.isRequired,\r\n    }).isRequired,\r\n    innerRef: PropTypes.oneOfType([\r\n        PropTypes.oneOf([null]),\r\n        PropTypes.func,\r\n        PropTypes.shape({\r\n            current: PropTypes.any.isRequired,\r\n        }),\r\n    ]).isRequired,\r\n    selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n    return (\r\n        <MenuItem\r\n            ref={props.innerRef}\r\n            selected={props.isFocused}\r\n            component=\"div\"\r\n            style={{\r\n                fontWeight: props.isSelected ? 500 : 400,\r\n            }}\r\n            {...props.innerProps}\r\n        >\r\n            {props.children}\r\n        </MenuItem>\r\n    );\r\n}\r\n\r\nOption.propTypes = {\r\n    /**\r\n     * The children to be rendered.\r\n     */\r\n    children: PropTypes.node,\r\n    /**\r\n     * props passed to the wrapping element for the group.\r\n     */\r\n    innerProps: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        key: PropTypes.string.isRequired,\r\n        onClick: PropTypes.func.isRequired,\r\n        onMouseMove: PropTypes.func.isRequired,\r\n        onMouseOver: PropTypes.func.isRequired,\r\n        tabIndex: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n    /**\r\n     * Inner ref to DOM Node\r\n     */\r\n    innerRef: PropTypes.oneOfType([\r\n        PropTypes.oneOf([null]),\r\n        PropTypes.func,\r\n        PropTypes.shape({\r\n            current: PropTypes.any.isRequired,\r\n        }),\r\n    ]).isRequired,\r\n    /**\r\n     * Whether the option is focused.\r\n     */\r\n    isFocused: PropTypes.bool.isRequired,\r\n    /**\r\n     * Whether the option is selected.\r\n     */\r\n    isSelected: PropTypes.bool.isRequired,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n    const { selectProps, innerProps = {}, children } = props;\r\n    return (\r\n        <Typography color=\"textSecondary\" className={selectProps.classes.placeholder} {...innerProps}>\r\n            {children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n    /**\r\n     * The children to be rendered.\r\n     */\r\n    children: PropTypes.node,\r\n    /**\r\n     * props passed to the wrapping element for the group.\r\n     */\r\n    innerProps: PropTypes.object,\r\n    selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n    return (\r\n        <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n    /**\r\n     * The children to be rendered.\r\n     */\r\n    children: PropTypes.node,\r\n    /**\r\n     * Props passed to the wrapping element for the group.\r\n     */\r\n    innerProps: PropTypes.any.isRequired,\r\n    selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n    return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n    /**\r\n     * The children to be rendered.\r\n     */\r\n    children: PropTypes.node,\r\n    selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n    return (\r\n        <Chip\r\n            tabIndex={-1}\r\n            label={props.children}\r\n            className={clsx(props.selectProps.classes.chip, {\r\n                [props.selectProps.classes.chipFocused]: props.isFocused,\r\n            })}\r\n            onDelete={props.removeProps.onClick}\r\n            deleteIcon={<CancelIcon {...props.removeProps} />}\r\n        />\r\n    );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n    children: PropTypes.node,\r\n    isFocused: PropTypes.bool.isRequired,\r\n    removeProps: PropTypes.shape({\r\n        onClick: PropTypes.func.isRequired,\r\n        onMouseDown: PropTypes.func.isRequired,\r\n        onTouchEnd: PropTypes.func.isRequired,\r\n    }).isRequired,\r\n    selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n    return (\r\n        <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n            {props.children}\r\n        </Paper>\r\n    );\r\n}\r\n\r\nMenu.propTypes = {\r\n    /**\r\n     * The children to be rendered.\r\n     */\r\n    children: PropTypes.element.isRequired,\r\n    /**\r\n     * Props to be passed to the menu wrapper.\r\n     */\r\n    innerProps: PropTypes.object.isRequired,\r\n    selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nconst components = {\r\n    Control,\r\n    Menu,\r\n    MultiValue,\r\n    NoOptionsMessage,\r\n    Option,\r\n    Placeholder,\r\n    SingleValue,\r\n    ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [single, setSingle] = React.useState(null);\r\n    const [multi, setMulti] = React.useState(null);\r\n\r\n    const handleChangeSingle = value => {\r\n        setSingle(value);\r\n    };\r\n\r\n    const handleChangeMulti = value => {\r\n        setMulti(value);\r\n    };\r\n\r\n    const selectStyles = {\r\n        input: base => ({\r\n            ...base,\r\n            color: theme.palette.text.primary,\r\n            '& input': {\r\n                font: 'inherit',\r\n            },\r\n        }),\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <NoSsr>\r\n                <Select\r\n                    classes={classes}\r\n                    styles={selectStyles}\r\n                    inputId=\"react-select-single\"\r\n                    TextFieldProps={{\r\n                        label: 'Enter Username',\r\n                        InputLabelProps: {\r\n                            htmlFor: 'react-select-single',\r\n                            shrink: true,\r\n                        },\r\n                    }}\r\n                    placeholder=\"Search Here\"\r\n                    options={suggestions}\r\n                    components={components}\r\n                    value={single}\r\n                    onChange={handleChangeSingle}\r\n                />\r\n                <div className={classes.divider} />\r\n            </NoSsr>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SelectUser from './selectUser';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    addRoom: {\r\n        position: 'absolute',\r\n        bottom: 57,\r\n        left: 56,\r\n        zIndex: 10000,\r\n        boxShadow: ' 1px -1px 2px 1px #209cee',\r\n        background: 'white',\r\n        height: 150,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n    },\r\n    addRoomClosed: {\r\n        display: 'none',\r\n    },\r\n    fab: {\r\n        backgroundColor: '209cee',\r\n        position: 'absolute',\r\n        bottom: 57,\r\n        left: 10,\r\n        zIndex: 100001,\r\n    },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#85edff',\r\n            main: '#209cee',\r\n            dark: '#2e77d5',\r\n        },\r\n        secondary: {\r\n            light: '#ff8099',\r\n            main: '#ff3860',\r\n            dark: '#ff0033',\r\n        },\r\n    },\r\n});\r\n\r\nexport default function AddUser() {\r\n    const classes = useStyles();\r\n    const [clicks, addClicks] = React.useState(0);\r\n    const [open, setOpen] = React.useState(false);\r\n    const style = open ? <span>Close</span> : <AddIcon />;\r\n    const color = open ? 'secondary' : 'primary';\r\n\r\n    function addRoom() {\r\n        if (clicks % 2 == 0) {\r\n            setOpen(true);\r\n        } else {\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Fab color={color} aria-label=\"add\" className={classes.fab} onClick={() => {\r\n                addClicks(clicks + 1);\r\n                console.log(clicks);\r\n                addRoom();\r\n            }} >\r\n                {style}\r\n            </Fab>\r\n            <span>Add User</span>\r\n            <div className={clsx({\r\n                [classes.addRoom]: open,\r\n                [classes.addRoomClosed]: !open,\r\n            })\r\n            }>\r\n                <SelectUser />\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.button}>\r\n                    New Message\r\n      </Button>\r\n\r\n            </div>\r\n        </ ThemeProvider >\r\n    );\r\n}","import React from 'react';\r\nimport Chat from './DEMO-CHAT.json';\r\nimport DisplayChat from './displayChat';\r\nimport MessengerNavigation from './messenger-navigation';\r\nimport MessageSend from './messageSend';\r\nimport './chatDisplay.css';\r\nimport AddUser from './addUser';\r\n\r\nexport default function Messenger(props) {\r\n    const user = props.name;\r\n    const chatText = Chat.chat\r\n\r\n    return (\r\n        <div className=\"messenger\">\r\n            <MessengerNavigation />\r\n            <AddUser />\r\n            <MessageSend />\r\n            <DisplayChat chat={chatText} user={user} />\r\n        </div>\r\n    )\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from 'react';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport Icon from '@material-ui/core/Icon';\nimport Profile from './profile-page/profile';\nimport Messenger from './messenger-page/messenger';\n\n\nexport default function App() {\n  const [value, setValue] = React.useState('messenger');\n\n  function handlePages(event, newValue) {\n    setValue(newValue)\n  }\n\n  function changePage() {\n    if (value === 'profile') {\n      return <Profile />\n    } else if (value === 'wallet') {\n      return <span>Favorites</span>\n    } else if (value === 'nearby') {\n      return <span>Nearby</span>\n    } else if (value === 'messenger') {\n      return <Messenger name=\"northcrypto\" />\n    }\n  }\n\n  function navigation() {\n    return (\n      <BottomNavigation value={value} onChange={handlePages} page={value}>\n        <BottomNavigationAction label=\"Profile\" value=\"profile\" icon={<Icon><img src=\"./icons/icons_identity.png\" className=\"icon-image\" alt=\"😀\" /></Icon>} />\n        <BottomNavigationAction label=\"Messenger\" value=\"messenger\" icon={<Icon><img src=\"./icons/icons_partners.png\" className=\"icon-image\" alt=\"📜\" /></Icon>} />\n      </BottomNavigation>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      {changePage()}\n      {navigation()}\n    </div>\n  )\n}\n\n"],"sourceRoot":""}