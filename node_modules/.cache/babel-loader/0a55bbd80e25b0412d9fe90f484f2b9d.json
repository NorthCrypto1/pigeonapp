{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\Dell\\\\messenger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\messenger\\\\src\\\\components\\\\DisplayConversation.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 0.21rem;\\n  img {\\n    height: 16px !important;\\n    width: 16px !important;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport emojione from 'emojione';\nimport $ from \"jquery\";\n\nclass DisplayConversation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      chat: [{\n        senderId: \"you\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.scrollToBottomLoad();\n    $(document).ready(function () {\n      $(\".message-text\").each(function () {\n        var original = $(this).html(); // use .shortnameToImage if only converting shortnames (for slightly better performance)\n\n        var converted = emojione.toImage(original);\n        $(this).html(converted);\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom() {\n    this.el.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }\n\n  scrollToBottomLoad() {\n    this.el.scrollIntoView();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"displayConversation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.chat.map((message, index) => React.createElement(\"li\", {\n      key: index,\n      className: \"message \".concat(message.senderId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"message-text one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, message.text))), React.createElement(\"div\", {\n      ref: el => {\n        this.el = el;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst Emoji = styled.span(_templateObject());\nexport default DisplayConversation;","map":{"version":3,"sources":["C:\\Users\\Dell\\messenger\\src\\components\\DisplayConversation.js"],"names":["React","Component","styled","emojione","$","DisplayConversation","constructor","state","chat","senderId","text","componentDidMount","scrollToBottomLoad","document","ready","each","original","html","converted","toImage","componentDidUpdate","scrollToBottom","el","scrollIntoView","behavior","render","map","message","index","Emoji","span"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAGA,MAAMC,mBAAN,SAAkCJ,SAAlC,CAA4C;AAC1CK,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,QAAQ,EAAE,KADZ;AAEEC,QAAAA,IAAI,EAAE;AAFR,OADI,EAKJ;AACED,QAAAA,QAAQ,EAAE,OADZ;AAEEC,QAAAA,IAAI,EAAE;AAFR,OALI,EASJ;AACED,QAAAA,QAAQ,EAAE,OADZ;AAEEC,QAAAA,IAAI,EAAE;AAFR,OATI;AADK,KAAb;AAgBD;;AAGDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,kBAAL;AACAR,IAAAA,CAAC,CAACS,QAAD,CAAD,CAAYC,KAAZ,CAAkB,YAAY;AAC5BV,MAAAA,CAAC,CAAC,eAAD,CAAD,CAAmBW,IAAnB,CAAwB,YAAY;AAClC,YAAIC,QAAQ,GAAGZ,CAAC,CAAC,IAAD,CAAD,CAAQa,IAAR,EAAf,CADkC,CAElC;;AACA,YAAIC,SAAS,GAAGf,QAAQ,CAACgB,OAAT,CAAiBH,QAAjB,CAAhB;AACAZ,QAAAA,CAAC,CAAC,IAAD,CAAD,CAAQa,IAAR,CAAaC,SAAb;AACD,OALD;AAMD,KAPD;AAQD;;AAEDE,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,cAAL;AACD;;AAEDA,EAAAA,cAAc,GAAG;AACf,SAAKC,EAAL,CAAQC,cAAR,CAAuB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAvB;AACD;;AAEDZ,EAAAA,kBAAkB,GAAG;AACnB,SAAKU,EAAL,CAAQC,cAAR;AACD;;AACDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKlB,KAAL,CAAWC,IAAX,CAAgBkB,GAAhB,CAAoB,CAACC,OAAD,EAAUC,KAAV,KACnB;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAgB,MAAA,SAAS,oBAAaD,OAAO,CAAClB,QAArB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCkB,OAAO,CAACjB,IAA1C,CADF,CADD,CADH,EAME;AAAK,MAAA,GAAG,EAAEY,EAAE,IAAI;AAAE,aAAKA,EAAL,GAAUA,EAAV;AAAe,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CADF;AAYD;;AA1DyC;;AA6D5C,MAAMO,KAAK,GAAG3B,MAAM,CAAC4B,IAAV,mBAAX;AAWA,eAAezB,mBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport emojione from 'emojione';\r\nimport $ from \"jquery\";\r\n\r\n\r\nclass DisplayConversation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      chat: [\r\n        {\r\n          senderId: \"you\",\r\n          text: \"testing testing testing :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"other\",\r\n          text: \"testing testing testing :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"other\",\r\n          text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.scrollToBottomLoad();\r\n    $(document).ready(function () {\r\n      $(\".message-text\").each(function () {\r\n        var original = $(this).html();\r\n        // use .shortnameToImage if only converting shortnames (for slightly better performance)\r\n        var converted = emojione.toImage(original);\r\n        $(this).html(converted);\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  scrollToBottom() {\r\n    this.el.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n\r\n  scrollToBottomLoad() {\r\n    this.el.scrollIntoView();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"displayConversation\" >\r\n        <ul >\r\n          {this.state.chat.map((message, index) => (\r\n            <li key={index} className={`message ${message.senderId}`}>\r\n              <p className=\"message-text one\" >{message.text}</p>\r\n            </li>\r\n          ))}\r\n          <div ref={el => { this.el = el; }} />\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst Emoji = styled.span`\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0.21rem;\r\n  img {\r\n    height: 16px !important;\r\n    width: 16px !important;\r\n  }\r\n`\r\nexport default DisplayConversation;"]},"metadata":{},"sourceType":"module"}