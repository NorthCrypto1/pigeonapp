{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Dell\\\\messenger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\messenger\\\\src\\\\messenger-page\\\\displayChat.js\";\nimport React, { useEffect } from 'react';\nimport emojione from 'emojione';\nimport $ from \"jquery\";\nimport ClickNHold from 'react-click-n-hold';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    position: 'relative'\n  },\n  paper: {\n    position: 'absolute',\n    top: 28,\n    right: 0,\n    left: 0,\n    border: '1px solid',\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function Chat(props) {\n  const chatText = props.chat;\n  const user = props.user;\n  let el = React.createRef();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        onClicked = _React$useState2[0],\n        setOnClicked = _React$useState2[1];\n\n  const _React$useState3 = React.useState(),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        onClickedMessage = _React$useState4[0],\n        setClickedMessage = _React$useState4[1];\n\n  const classes = useStyles();\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        open = _React$useState6[0],\n        setOpen = _React$useState6[1];\n\n  const handleClick = () => {\n    setOpen(prev => !prev);\n  };\n\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    $(document).ready(function () {\n      $(\".message-text\").each(function () {\n        var original = $(this).html();\n        var converted = emojione.toImage(original);\n        $(this).html(converted);\n      });\n    });\n    el.current.scrollIntoView();\n  });\n\n  function userSort(value) {\n    if (value === user) {\n      return 'you';\n    } else {\n      return 'other';\n    }\n  }\n\n  function start(e) {\n    console.log('START');\n  }\n\n  function end(e, enough) {\n    console.log('END');\n    console.log(enough ? 'Click released after enough time' : 'Click released too soon');\n  }\n\n  function test(index) {\n    if (onClickedMessage === index && onClicked === true) {\n      return '';\n    } else {\n      return 'hidden';\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"displayConversation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, chatText.map((message, index) => React.createElement(ClickAwayListener, {\n    key: index,\n    onClickAway: handleClickAway,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(ClickNHold, {\n    time: .25 // Time to keep pressing. Default is 2\n    ,\n    onStart: start // Start callback\n    ,\n    onClickNHold: function clickNHold(e) {\n      console.log('CLICK AND HOLD');\n      setOnClicked(true);\n      setClickedMessage(index);\n      console.log(onClickedMessage);\n      handleClick();\n    } //Timeout callback\n    ,\n    onEnd: end,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \" message \".concat(userSort(message.senderId)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"message-text one\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, message.text)), open ? React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Click me, I will stay visible.\") : null)))), React.createElement(\"div\", {\n    ref: el,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:\\Users\\Dell\\messenger\\src\\messenger-page\\displayChat.js"],"names":["React","useEffect","emojione","$","ClickNHold","ClickAwayListener","makeStyles","useStyles","theme","wrapper","position","paper","top","right","left","border","padding","spacing","backgroundColor","palette","background","Chat","props","chatText","chat","user","el","createRef","useState","onClicked","setOnClicked","onClickedMessage","setClickedMessage","classes","open","setOpen","handleClick","prev","handleClickAway","document","ready","each","original","html","converted","toImage","current","scrollIntoView","userSort","value","start","e","console","log","end","enough","test","index","map","message","clickNHold","senderId","text"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport emojione from 'emojione';\r\nimport $ from \"jquery\";\r\nimport ClickNHold from 'react-click-n-hold';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    wrapper: {\r\n        position: 'relative',\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        top: 28,\r\n        right: 0,\r\n        left: 0,\r\n        border: '1px solid',\r\n        padding: theme.spacing(1),\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function Chat(props) {\r\n    const chatText = props.chat;\r\n    const user = props.user;\r\n    let el = React.createRef();\r\n    const [onClicked, setOnClicked] = React.useState(false);\r\n    const [onClickedMessage, setClickedMessage] = React.useState();\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setOpen(prev => !prev);\r\n    };\r\n\r\n    const handleClickAway = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        $(document).ready(function () {\r\n            $(\".message-text\").each(function () {\r\n                var original = $(this).html();\r\n                var converted = emojione.toImage(original);\r\n                $(this).html(converted);\r\n            });\r\n        });\r\n        el.current.scrollIntoView();\r\n    })\r\n\r\n    function userSort(value) {\r\n        if (value === user) {\r\n            return ('you');\r\n        } else {\r\n            return ('other');\r\n        }\r\n    }\r\n    function start(e) {\r\n        console.log('START');\r\n    }\r\n\r\n    function end(e, enough) {\r\n        console.log('END');\r\n        console.log(enough ? 'Click released after enough time' : 'Click released too soon');\r\n    }\r\n\r\n    function test(index) {\r\n        if (onClickedMessage === index && onClicked === true) {\r\n            return '';\r\n        } else {\r\n            return 'hidden';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"displayConversation\" >\r\n            <ul >\r\n                {chatText.map((message, index) => (\r\n                    <ClickAwayListener key={index} onClickAway={handleClickAway}>\r\n                        <div className={classes.wrapper}>\r\n                            <ClickNHold\r\n                                time={.25} // Time to keep pressing. Default is 2\r\n                                onStart={start} // Start callback\r\n                                onClickNHold={function clickNHold(e) {\r\n                                    console.log('CLICK AND HOLD');\r\n                                    setOnClicked(true)\r\n                                    setClickedMessage(index)\r\n                                    console.log(onClickedMessage);\r\n                                    handleClick();\r\n                                }} //Timeout callback\r\n                                onEnd={end} >\r\n                                <li className={` message ${userSort(message.senderId)}`}>\r\n                                    <p className=\"message-text one\" >{message.text}</p>\r\n                                </li>\r\n                                {open ? <div className={classes.paper}>Click me, I will stay visible.</div> : null}\r\n                            </ClickNHold>\r\n                        </div>\r\n                    </ClickAwayListener>\r\n                ))}\r\n                <div ref={el} />\r\n            </ul>\r\n        </div >\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}