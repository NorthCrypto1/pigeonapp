{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\messenger\\\\src\\\\components\\\\messagingSend.js\";\nimport React from 'react';\nimport Picker from 'react-emojipicker';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      commandHistory: [],\n      value: ''\n    };\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.keyPress = this.keyPress.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  handleTextChange(e) {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  handleChange() {\n    if (this.state.revealLogin === false) {\n      this.setState({\n        revealLogin: true\n      });\n    } else {\n      this.setState({\n        revealLogin: true\n      });\n    }\n  }\n\n  handleChanges() {\n    this.setState({\n      revealLogin: false\n    });\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target) && this.state.revealLogin === true) {\n      this.setState({\n        revealLogin: false\n      });\n    }\n  }\n\n  logEmoji(emoji) {\n    const val = this.state.value + emoji.image;\n    this.setState({\n      value: val\n    });\n  }\n\n  keyPress(e) {\n    if (e.keyCode === 13) {\n      console.log(e.target.value);\n      var newArray = this.state.commandHistory;\n      newArray.push(e.target.value);\n      this.setState({\n        commandHistory: newArray,\n        value: ''\n      });\n      console.log(this.state.commandHistory);\n    }\n  }\n\n  render() {\n    const style = this.state.revealLogin ? {} : {\n      display: 'none'\n    };\n    return React.createElement(\"div\", {\n      className: \"messagingSend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.value,\n      onKeyDown: this.keyPress,\n      onChange: this.handleTextChange,\n      id: \"terminalInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Send\")), React.createElement(\"div\", {\n      className: \"emojiButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      onClick: this.handleChange,\n      src: \"./icons/icons_alien.png\",\n      className: \"emojiButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), \" \")), React.createElement(\"div\", {\n      className: \"emojiBox123\",\n      style: style,\n      ref: this.setWrapperRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Picker, {\n      onEmojiSelected: this.logEmoji.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"closeBottom\",\n      onClick: this.handleChanges.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:\\Users\\Dell\\messenger\\src\\components\\messagingSend.js"],"names":["React","Picker","Login","Component","constructor","state","commandHistory","value","handleTextChange","bind","keyPress","handleChange","setWrapperRef","handleClickOutside","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","node","wrapperRef","e","setState","target","revealLogin","handleChanges","event","contains","logEmoji","emoji","val","image","keyCode","console","log","newArray","push","render","style","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,EADP;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKG,aAAL,GAAqB,KAAKA,aAAL,CAAmBH,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKI,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBJ,IAAxB,CAA6B,IAA7B,CAA1B;AACH;;AAEDK,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKH,kBAA5C;AACH;;AAEDI,EAAAA,oBAAoB,GAAG;AACnBF,IAAAA,QAAQ,CAACG,mBAAT,CAA6B,WAA7B,EAA0C,KAAKL,kBAA/C;AACH;;AAEDD,EAAAA,aAAa,CAACO,IAAD,EAAO;AAChB,SAAKC,UAAL,GAAkBD,IAAlB;AACH;;AAEDX,EAAAA,gBAAgB,CAACa,CAAD,EAAI;AAChB,SAAKC,QAAL,CAAc;AACVf,MAAAA,KAAK,EAAEc,CAAC,CAACE,MAAF,CAAShB;AADN,KAAd;AAGH;;AAEDI,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKN,KAAL,CAAWmB,WAAX,KAA2B,KAA/B,EAAsC;AAClC,WAAKF,QAAL,CAAc;AAAEE,QAAAA,WAAW,EAAE;AAAf,OAAd;AACH,KAFD,MAEO;AACH,WAAKF,QAAL,CAAc;AAAEE,QAAAA,WAAW,EAAE;AAAf,OAAd;AACH;AACJ;;AAEDC,EAAAA,aAAa,GAAG;AACZ,SAAKH,QAAL,CAAc;AAAEE,MAAAA,WAAW,EAAE;AAAf,KAAd;AACH;;AAEDX,EAAAA,kBAAkB,CAACa,KAAD,EAAQ;AACtB,QAAI,KAAKN,UAAL,IAAmB,CAAC,KAAKA,UAAL,CAAgBO,QAAhB,CAAyBD,KAAK,CAACH,MAA/B,CAApB,IAA8D,KAAKlB,KAAL,CAAWmB,WAAX,KAA2B,IAA7F,EAAmG;AAC/F,WAAKF,QAAL,CAAc;AAAEE,QAAAA,WAAW,EAAE;AAAf,OAAd;AACH;AACJ;;AAEDI,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZ,UAAMC,GAAG,GAAG,KAAKzB,KAAL,CAAWE,KAAX,GAAmBsB,KAAK,CAACE,KAArC;AACA,SAAKT,QAAL,CAAc;AAAEf,MAAAA,KAAK,EAAEuB;AAAT,KAAd;AACH;;AACDpB,EAAAA,QAAQ,CAACW,CAAD,EAAI;AACR,QAAIA,CAAC,CAACW,OAAF,KAAc,EAAlB,EAAsB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYb,CAAC,CAACE,MAAF,CAAShB,KAArB;AACA,UAAI4B,QAAQ,GAAG,KAAK9B,KAAL,CAAWC,cAA1B;AACA6B,MAAAA,QAAQ,CAACC,IAAT,CAAcf,CAAC,CAACE,MAAF,CAAShB,KAAvB;AACA,WAAKe,QAAL,CAAc;AACVhB,QAAAA,cAAc,EAAE6B,QADN;AAEV5B,QAAAA,KAAK,EAAE;AAFG,OAAd;AAIA0B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7B,KAAL,CAAWC,cAAvB;AACH;AACJ;;AAED+B,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAG,KAAKjC,KAAL,CAAWmB,WAAX,GAAyB,EAAzB,GAA8B;AAAEe,MAAAA,OAAO,EAAE;AAAX,KAA5C;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWE,KAAzB;AAAgC,MAAA,SAAS,EAAE,KAAKG,QAAhD;AAA0D,MAAA,QAAQ,EAAE,KAAKF,gBAAzE;AAA2F,MAAA,EAAE,EAAC,eAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxB,CAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B;AAAK,MAAA,OAAO,EAAE,KAAKG,YAAnB;AAAiC,MAAA,GAAG,EAAC,yBAArC;AAA+D,MAAA,SAAS,EAAC,aAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B,MAHJ,CADJ,EAMI;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,KAAK,EAAE2B,KAApC;AAA2C,MAAA,GAAG,EAAE,KAAK1B,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,eAAe,EAAE,KAAKgB,QAAL,CAAcnB,IAAd,CAAmB,IAAnB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,OAAO,EAAE,KAAKgB,aAAL,CAAmBhB,IAAnB,CAAwB,IAAxB,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CANJ,CADJ;AAaH;;AAnF+B;;AAqFpC,eAAeP,KAAf","sourcesContent":["import React from 'react';\r\nimport Picker from 'react-emojipicker';\r\n\r\nclass Login extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            commandHistory: [],\r\n            value: '',\r\n        };\r\n        this.handleTextChange = this.handleTextChange.bind(this);\r\n        this.keyPress = this.keyPress.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.setWrapperRef = this.setWrapperRef.bind(this);\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    setWrapperRef(node) {\r\n        this.wrapperRef = node;\r\n    }\r\n\r\n    handleTextChange(e) {\r\n        this.setState({\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    handleChange() {\r\n        if (this.state.revealLogin === false) {\r\n            this.setState({ revealLogin: true });\r\n        } else {\r\n            this.setState({ revealLogin: true });\r\n        }\r\n    }\r\n\r\n    handleChanges() {\r\n        this.setState({ revealLogin: false })\r\n    }\r\n\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target) && this.state.revealLogin === true) {\r\n            this.setState({ revealLogin: false });\r\n        }\r\n    }\r\n\r\n    logEmoji(emoji) {\r\n        const val = this.state.value + emoji.image;\r\n        this.setState({ value: val })\r\n    }\r\n    keyPress(e) {\r\n        if (e.keyCode === 13) {\r\n            console.log(e.target.value);\r\n            var newArray = this.state.commandHistory;\r\n            newArray.push(e.target.value);\r\n            this.setState({\r\n                commandHistory: newArray,\r\n                value: ''\r\n            });\r\n            console.log(this.state.commandHistory);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const style = this.state.revealLogin ? {} : { display: 'none' };\r\n\r\n        return (\r\n            <div className=\"messagingSend\">\r\n                <div id=\"send\">\r\n                    <input value={this.state.value} onKeyDown={this.keyPress} onChange={this.handleTextChange} id=\"terminalInput\" ></input>\r\n                    <div className=\"submit\"><span>Send</span></div>\r\n                    <div className=\"emojiButton\" ><img onClick={this.handleChange} src=\"./icons/icons_alien.png\" className=\"emojiButton\" /> </div>\r\n                </div>\r\n                <div className=\"emojiBox123\" style={style} ref={this.setWrapperRef} >\r\n                    <Picker onEmojiSelected={this.logEmoji.bind(this)} />\r\n                    <div className=\"closeBottom\" onClick={this.handleChanges.bind(this)}></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}