{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\messenger\\\\src\\\\messenger-page\\\\displayChat.js\";\nimport React, { useEffect } from 'react';\nimport emojione from 'emojione';\nimport $ from \"jquery\";\nimport ClickNHold from 'react-click-n-hold';\nexport default function Chat(props) {\n  const chatText = props.chat;\n  const user = props.user;\n  let el = React.createRef();\n  useEffect(() => {\n    $(document).ready(function () {\n      $(\".message-text\").each(function () {\n        var original = $(this).html();\n        var converted = emojione.toImage(original);\n        $(this).html(converted);\n      });\n    });\n    el.current.scrollIntoView();\n  });\n\n  function userSort(value) {\n    if (value === user) {\n      return 'you';\n    } else {\n      return 'other';\n    }\n  }\n\n  function start(e) {\n    console.log('START');\n  }\n\n  function end(e, enough) {\n    console.log('END');\n    console.log(enough ? 'Click released after enough time' : 'Click released too soon');\n  }\n\n  function clickNHold(e) {\n    console.log('CLICK AND HOLD');\n  }\n\n  return React.createElement(\"div\", {\n    className: \"displayConversation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, chatText.map((message, index) => React.createElement(ClickNHold, {\n    time: 2 // Time to keep pressing. Default is 2\n    ,\n    onStart: start // Start callback\n    ,\n    onClickNHold: clickNHold //Timeout callback\n    ,\n    onEnd: end,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    key: index,\n    className: \"message \".concat(userSort(message.senderId)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"message-text one\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, message.text)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    ref: el,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:\\Users\\Dell\\messenger\\src\\messenger-page\\displayChat.js"],"names":["React","useEffect","emojione","$","ClickNHold","Chat","props","chatText","chat","user","el","createRef","document","ready","each","original","html","converted","toImage","current","scrollIntoView","userSort","value","start","e","console","log","end","enough","clickNHold","map","message","index","senderId","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAChC,QAAMC,QAAQ,GAAGD,KAAK,CAACE,IAAvB;AACA,QAAMC,IAAI,GAAGH,KAAK,CAACG,IAAnB;AACA,MAAIC,EAAE,GAAGV,KAAK,CAACW,SAAN,EAAT;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,CAAC,CAACS,QAAD,CAAD,CAAYC,KAAZ,CAAkB,YAAY;AAC1BV,MAAAA,CAAC,CAAC,eAAD,CAAD,CAAmBW,IAAnB,CAAwB,YAAY;AAChC,YAAIC,QAAQ,GAAGZ,CAAC,CAAC,IAAD,CAAD,CAAQa,IAAR,EAAf;AACA,YAAIC,SAAS,GAAGf,QAAQ,CAACgB,OAAT,CAAiBH,QAAjB,CAAhB;AACAZ,QAAAA,CAAC,CAAC,IAAD,CAAD,CAAQa,IAAR,CAAaC,SAAb;AACH,OAJD;AAKH,KAND;AAOAP,IAAAA,EAAE,CAACS,OAAH,CAAWC,cAAX;AACH,GATQ,CAAT;;AAWA,WAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAIA,KAAK,KAAKb,IAAd,EAAoB;AAChB,aAAQ,KAAR;AACH,KAFD,MAEO;AACH,aAAQ,OAAR;AACH;AACJ;;AACD,WAASc,KAAT,CAAeC,CAAf,EAAkB;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AAED,WAASC,GAAT,CAAaH,CAAb,EAAgBI,MAAhB,EAAwB;AACpBH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAM,GAAG,kCAAH,GAAwC,yBAA1D;AACH;;AAED,WAASC,UAAT,CAAoBL,CAApB,EAAuB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,QAAQ,CAACuB,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KACV,oBAAC,UAAD;AACI,IAAA,IAAI,EAAE,CADV,CACa;AADb;AAEI,IAAA,OAAO,EAAET,KAFb,CAEoB;AAFpB;AAGI,IAAA,YAAY,EAAEM,UAHlB,CAG8B;AAH9B;AAII,IAAA,KAAK,EAAEF,GAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AAAI,IAAA,GAAG,EAAEK,KAAT;AAAgB,IAAA,SAAS,oBAAaX,QAAQ,CAACU,OAAO,CAACE,QAAT,CAArB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCF,OAAO,CAACG,IAA1C,CADJ,CALJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADH,CADL,EAaI;AAAK,IAAA,GAAG,EAAExB,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADJ,CADJ;AAoBH","sourcesContent":["import React, { useEffect } from 'react';\r\nimport emojione from 'emojione';\r\nimport $ from \"jquery\";\r\nimport ClickNHold from 'react-click-n-hold';\r\n\r\nexport default function Chat(props) {\r\n    const chatText = props.chat;\r\n    const user = props.user;\r\n    let el = React.createRef();\r\n\r\n    useEffect(() => {\r\n        $(document).ready(function () {\r\n            $(\".message-text\").each(function () {\r\n                var original = $(this).html();\r\n                var converted = emojione.toImage(original);\r\n                $(this).html(converted);\r\n            });\r\n        });\r\n        el.current.scrollIntoView();\r\n    })\r\n\r\n    function userSort(value) {\r\n        if (value === user) {\r\n            return ('you');\r\n        } else {\r\n            return ('other');\r\n        }\r\n    }\r\n    function start(e) {\r\n        console.log('START');\r\n    }\r\n\r\n    function end(e, enough) {\r\n        console.log('END');\r\n        console.log(enough ? 'Click released after enough time' : 'Click released too soon');\r\n    }\r\n\r\n    function clickNHold(e) {\r\n        console.log('CLICK AND HOLD');\r\n    }\r\n\r\n    return (\r\n        <div className=\"displayConversation\" >\r\n            <ul >\r\n                {chatText.map((message, index) => (\r\n                    <ClickNHold\r\n                        time={2} // Time to keep pressing. Default is 2\r\n                        onStart={start} // Start callback\r\n                        onClickNHold={clickNHold} //Timeout callback\r\n                        onEnd={end} >\r\n                        <li key={index} className={`message ${userSort(message.senderId)}`}>\r\n                            <p className=\"message-text one\" >{message.text}</p>\r\n                        </li>\r\n                        <div></div>\r\n                    </ClickNHold>\r\n                ))}\r\n                <div ref={el} />\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}