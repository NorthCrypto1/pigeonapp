{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\messenger\\\\src\\\\components\\\\DisplayConversation.js\";\nimport React, { Component } from 'react';\nimport emojione from 'emojione';\nimport $ from \"jquery\";\n\nclass DisplayConversation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      chat: [{\n        senderId: \"you\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \"\n      }, {\n        senderId: \"you\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \"\n      }, {\n        senderId: \"you\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \"\n      }, {\n        senderId: \"you\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \"\n      }, {\n        senderId: \"you\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \"\n      }, {\n        senderId: \"you\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \"\n      }],\n      prevChat: [{\n        senderId: \"you\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \"\n      }, {\n        senderId: \"you\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \"\n      }, {\n        senderId: \"you\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \"\n      }, {\n        senderId: \"you\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \"\n      }, {\n        senderId: \"you\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \"\n      }, {\n        senderId: \"you\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.scrollToBottomLoad();\n    $(document).ready(function () {\n      $(\".message-text\").each(function () {\n        var original = $(this).html();\n        var converted = emojione.toImage(original);\n        $(this).html(converted);\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.chat !== this.state.prevChat) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom() {\n    this.el.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }\n\n  scrollToBottomLoad() {\n    this.el.scrollIntoView();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"displayConversation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.state.chat.map((message, index) => React.createElement(\"li\", {\n      key: index,\n      className: \"message \".concat(message.senderId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"message-text one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, message.text))), React.createElement(\"div\", {\n      ref: el => {\n        this.el = el;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default DisplayConversation;","map":{"version":3,"sources":["C:\\Users\\Dell\\messenger\\src\\components\\DisplayConversation.js"],"names":["React","Component","emojione","$","DisplayConversation","constructor","state","chat","senderId","text","prevChat","componentDidMount","scrollToBottomLoad","document","ready","each","original","html","converted","toImage","componentDidUpdate","scrollToBottom","el","scrollIntoView","behavior","render","map","message","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport emojione from 'emojione';\r\nimport $ from \"jquery\";\r\n\r\n\r\nclass DisplayConversation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      chat: [\r\n        {\r\n          senderId: \"you\",\r\n          text: \"testing testing testing :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"other\",\r\n          text: \"testing testing testing :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"other\",\r\n          text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"you\",\r\n          text: \"testing testing testing :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"other\",\r\n          text: \"testing testing testing :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"other\",\r\n          text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"you\",\r\n          text: \"testing testing testing :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"other\",\r\n          text: \"testing testing testing :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"other\",\r\n          text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"you\",\r\n          text: \"testing testing testing :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"other\",\r\n          text: \"testing testing testing :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"other\",\r\n          text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"you\",\r\n          text: \"testing testing testing :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"other\",\r\n          text: \"testing testing testing :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"other\",\r\n          text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"you\",\r\n          text: \"testing testing testing :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"other\",\r\n          text: \"testing testing testing :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"other\",\r\n          text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \",\r\n        },\r\n      ],\r\n      prevChat: [{\r\n        senderId: \"you\",\r\n        text: \"testing testing testing :face_with_head_bandage: \",\r\n      },\r\n      {\r\n        senderId: \"other\",\r\n        text: \"testing testing testing :face_with_head_bandage: \",\r\n      },\r\n      {\r\n        senderId: \"other\",\r\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \",\r\n      },\r\n      {\r\n        senderId: \"you\",\r\n        text: \"testing testing testing :face_with_head_bandage: \",\r\n      },\r\n      {\r\n        senderId: \"other\",\r\n        text: \"testing testing testing :face_with_head_bandage: \",\r\n      },\r\n      {\r\n        senderId: \"other\",\r\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \",\r\n      },\r\n      {\r\n        senderId: \"you\",\r\n        text: \"testing testing testing :face_with_head_bandage: \",\r\n      },\r\n      {\r\n        senderId: \"other\",\r\n        text: \"testing testing testing :face_with_head_bandage: \",\r\n      },\r\n      {\r\n        senderId: \"other\",\r\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \",\r\n      },\r\n      {\r\n        senderId: \"you\",\r\n        text: \"testing testing testing :face_with_head_bandage: \",\r\n      },\r\n      {\r\n        senderId: \"other\",\r\n        text: \"testing testing testing :face_with_head_bandage: \",\r\n      },\r\n      {\r\n        senderId: \"other\",\r\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \",\r\n      },\r\n      {\r\n        senderId: \"you\",\r\n        text: \"testing testing testing :face_with_head_bandage: \",\r\n      },\r\n      {\r\n        senderId: \"other\",\r\n        text: \"testing testing testing :face_with_head_bandage: \",\r\n      },\r\n      {\r\n        senderId: \"other\",\r\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \",\r\n      },\r\n      {\r\n        senderId: \"you\",\r\n        text: \"testing testing testing :face_with_head_bandage: \",\r\n      },\r\n      {\r\n        senderId: \"other\",\r\n        text: \"testing testing testing :face_with_head_bandage: \",\r\n      },\r\n      {\r\n        senderId: \"other\",\r\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \",\r\n      },]\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.scrollToBottomLoad();\r\n    $(document).ready(function () {\r\n      $(\".message-text\").each(function () {\r\n        var original = $(this).html();\r\n        var converted = emojione.toImage(original);\r\n        $(this).html(converted);\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.chat !== this.state.prevChat) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  scrollToBottom() {\r\n    this.el.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n\r\n  scrollToBottomLoad() {\r\n    this.el.scrollIntoView();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"displayConversation\" >\r\n        <ul >\r\n          {this.state.chat.map((message, index) => (\r\n            <li key={index} className={`message ${message.senderId}`}>\r\n              <p className=\"message-text one\" >{message.text}</p>\r\n            </li>\r\n          ))}\r\n          <div ref={el => { this.el = el; }} />\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DisplayConversation;"]},"metadata":{},"sourceType":"module"}