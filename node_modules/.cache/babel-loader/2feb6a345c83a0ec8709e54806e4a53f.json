{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Dell\\\\messenger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nexport default function useLongPress(callback = () => {}, ms = 300) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        startLongPress = _useState2[0],\n        setStartLongPress = _useState2[1];\n\n  useEffect(() => {\n    let timerId;\n\n    if (startLongPress) {\n      timerId = setTimeout(callback, ms);\n    } else {\n      clearTimeout(timerId);\n    }\n\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [startLongPress]);\n  return {\n    onMouseDown: () => setStartLongPress(true),\n    onMouseUp: () => setStartLongPress(false),\n    onMouseLeave: () => setStartLongPress(false),\n    onTouchStart: () => setStartLongPress(true),\n    onTouchEnd: () => setStartLongPress(false)\n  };\n}","map":{"version":3,"sources":["C:\\Users\\Dell\\messenger\\src\\messenger-page\\useLongPress.js"],"names":["useState","useEffect","useLongPress","callback","ms","startLongPress","setStartLongPress","timerId","setTimeout","clearTimeout","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,YAAT,CAAsBC,QAAQ,GAAG,MAAM,CAAG,CAA1C,EAA4CC,EAAE,GAAG,GAAjD,EAAsD;AAAA,oBACrBJ,QAAQ,CAAC,KAAD,CADa;AAAA;AAAA,QAC1DK,cAD0D;AAAA,QAC1CC,iBAD0C;;AAGjEL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,OAAJ;;AACA,QAAIF,cAAJ,EAAoB;AAChBE,MAAAA,OAAO,GAAGC,UAAU,CAACL,QAAD,EAAWC,EAAX,CAApB;AACH,KAFD,MAEO;AACHK,MAAAA,YAAY,CAACF,OAAD,CAAZ;AACH;;AAED,WAAO,MAAM;AACTE,MAAAA,YAAY,CAACF,OAAD,CAAZ;AACH,KAFD;AAGH,GAXQ,EAWN,CAACF,cAAD,CAXM,CAAT;AAaA,SAAO;AACHK,IAAAA,WAAW,EAAE,MAAMJ,iBAAiB,CAAC,IAAD,CADjC;AAEHK,IAAAA,SAAS,EAAE,MAAML,iBAAiB,CAAC,KAAD,CAF/B;AAGHM,IAAAA,YAAY,EAAE,MAAMN,iBAAiB,CAAC,KAAD,CAHlC;AAIHO,IAAAA,YAAY,EAAE,MAAMP,iBAAiB,CAAC,IAAD,CAJlC;AAKHQ,IAAAA,UAAU,EAAE,MAAMR,iBAAiB,CAAC,KAAD;AALhC,GAAP;AAOH","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport default function useLongPress(callback = () => { }, ms = 300) {\r\n    const [startLongPress, setStartLongPress] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let timerId;\r\n        if (startLongPress) {\r\n            timerId = setTimeout(callback, ms);\r\n        } else {\r\n            clearTimeout(timerId);\r\n        }\r\n\r\n        return () => {\r\n            clearTimeout(timerId);\r\n        };\r\n    }, [startLongPress]);\r\n\r\n    return {\r\n        onMouseDown: () => setStartLongPress(true),\r\n        onMouseUp: () => setStartLongPress(false),\r\n        onMouseLeave: () => setStartLongPress(false),\r\n        onTouchStart: () => setStartLongPress(true),\r\n        onTouchEnd: () => setStartLongPress(false),\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}