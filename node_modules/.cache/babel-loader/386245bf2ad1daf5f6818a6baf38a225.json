{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Dell\\\\messenger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Dell\\\\messenger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\messenger\\\\src\\\\messenger-page\\\\messenger-navigation.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Badge from '@material-ui/core/Badge';\nimport InfoIcon from '@material-ui/icons/Info';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  margin: {\n    margin: theme.spacing(2)\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap'\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1\n  },\n  toolbar: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1)\n  }, theme.mixins.toolbar),\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  avatar: {\n    margin: 0,\n    left: -8\n  },\n  orangeAvatar: {\n    left: -8,\n    margin: 0,\n    color: '#fff',\n    backgroundColor: '#ffdd57'\n  },\n  padding: {\n    paddingBottom: 24\n  },\n  info: {\n    position: \"absolute\",\n    width: \"100px\",\n    height: \"50px\",\n    background: \"grey\",\n    top: \"50px\",\n    left: \"100px\"\n  }\n}));\nexport default function MiniDrawer(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"Messenger\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        selectedIndex = _React$useState4[0],\n        setSelectedIndex = _React$useState4[1];\n\n  const _React$useState5 = React.useState('left'),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        horizontal = _React$useState6[0],\n        setHorizontal = _React$useState6[1];\n\n  const _React$useState7 = React.useState('top'),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        vertical = _React$useState8[0],\n        setVertical = _React$useState8[1];\n\n  const _React$useState9 = React.useState(false),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        infoSelect = _React$useState10[0],\n        setInfoSelect = _React$useState10[1];\n\n  const _React$useState11 = React.useState(false),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        checkedA = _React$useState12[0],\n        setCheckedA = _React$useState12[1];\n\n  const data = props.friendList.friends;\n\n  const handleChange = name => event => {\n    console.log(checkedA);\n  };\n\n  function infoOpen() {\n    if (selectedIndex !== \"Messenger\" && infoSelect === false) {\n      setInfoSelect(true);\n      console.log(data[1].muted);\n    } else if (infoSelect === true) {\n      setInfoSelect(false);\n    }\n  }\n\n  function infoClose() {\n    if (infoSelect === true) {\n      setInfoSelect(false);\n    }\n  }\n\n  function handleListItemClick(event, index) {\n    setSelectedIndex(index.friend);\n    console.log(event);\n  }\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n\n  function slice(name) {\n    var x = name;\n    var y = x.slice(0, 1);\n    return y;\n  }\n\n  function randomNumber() {\n    var y = Math.floor(Math.random() * 101);\n    return y;\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    position: \"fixed\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerOpen,\n    edge: \"start\",\n    className: clsx(classes.menuButton, {\n      [classes.hide]: open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, selectedIndex), React.createElement(IconButton, {\n    className: classes.button,\n    onClick: infoOpen,\n    \"aria-label\": \"delete\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(InfoIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: clsx({\n      [classes.info]: infoSelect,\n      [classes.hide]: !infoSelect\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: checkedA,\n      onChange: handleChange('checkedA'),\n      value: \"checkedA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }),\n    label: \"Mute Chat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  })))), React.createElement(Drawer, {\n    variant: \"permanent\",\n    className: clsx(classes.drawer, {\n      [classes.drawerOpen]: open,\n      [classes.drawerClose]: !open\n    }),\n    classes: {\n      paper: clsx({\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open\n      })\n    },\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleDrawerClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? React.createElement(ChevronRightIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }) : React.createElement(ChevronLeftIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }), React.createElement(List, {\n    className: classes.padding,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, props.friendList.friends.map((text, index) => React.createElement(ListItem, {\n    button: true,\n    key: index,\n    selected: selectedIndex === text.friend,\n    onClick: event => handleListItemClick(event, text),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(Badge, {\n    color: \"secondary\",\n    max: 99,\n    badgeContent: randomNumber(index),\n    anchorOrigin: {\n      horizontal,\n      vertical\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: index % 2 === 0 ? classes.avatar : classes.orangeAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, slice(text.friend)))), React.createElement(ListItemText, {\n    primary: text.friend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }))))), React.createElement(\"main\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:\\Users\\Dell\\messenger\\src\\messenger-page\\messenger-navigation.js"],"names":["React","clsx","makeStyles","useTheme","Drawer","AppBar","Toolbar","List","CssBaseline","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemIcon","ListItemText","Avatar","Badge","InfoIcon","FormGroup","FormControlLabel","Checkbox","drawerWidth","useStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","margin","spacing","menuButton","marginRight","button","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","avatar","left","orangeAvatar","color","backgroundColor","paddingBottom","info","position","height","background","top","MiniDrawer","props","classes","useState","open","setOpen","selectedIndex","setSelectedIndex","horizontal","setHorizontal","vertical","setVertical","infoSelect","setInfoSelect","checkedA","setCheckedA","data","friendList","friends","handleChange","name","event","console","log","infoOpen","muted","infoClose","handleListItemClick","index","friend","handleDrawerOpen","handleDrawerClose","slice","x","y","randomNumber","Math","floor","random","paper","direction","map","text"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    avatar: {\r\n        margin: 0,\r\n        left: -8,\r\n    },\r\n    orangeAvatar: {\r\n        left: -8,\r\n        margin: 0,\r\n        color: '#fff',\r\n        backgroundColor: '#ffdd57',\r\n    },\r\n    padding: {\r\n        paddingBottom: 24,\r\n    },\r\n    info: {\r\n        position: \"absolute\",\r\n        width: \"100px\",\r\n        height: \"50px\",\r\n        background: \"grey\",\r\n        top: \"50px\",\r\n        left: \"100px\",\r\n    }\r\n}));\r\n\r\nexport default function MiniDrawer(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(\"Messenger\");\r\n    const [horizontal, setHorizontal] = React.useState('left');\r\n    const [vertical, setVertical] = React.useState('top');\r\n    const [infoSelect, setInfoSelect] = React.useState(false);\r\n    const [checkedA, setCheckedA] = React.useState(false);\r\n    const data = props.friendList.friends;\r\n\r\n\r\n    const handleChange = name => event => {\r\n        console.log(checkedA);\r\n    };\r\n\r\n    function infoOpen() {\r\n        if (selectedIndex !== \"Messenger\" && infoSelect === false) {\r\n            setInfoSelect(true);\r\n            console.log(data[1].muted)\r\n        } else if (infoSelect === true) {\r\n            setInfoSelect(false);\r\n        }\r\n    }\r\n    function infoClose() {\r\n        if (infoSelect === true) {\r\n            setInfoSelect(false);\r\n        }\r\n    }\r\n\r\n    function handleListItemClick(event, index) {\r\n        setSelectedIndex(index.friend);\r\n        console.log(event);\r\n    }\r\n\r\n    function handleDrawerOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleDrawerClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    function slice(name) {\r\n        var x = name;\r\n        var y = x.slice(0, 1);\r\n        return (y)\r\n    }\r\n    function randomNumber() {\r\n        var y = Math.floor(Math.random() * 101)\r\n        return y\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        {selectedIndex}\r\n                    </Typography>\r\n                    <IconButton className={classes.button} onClick={infoOpen} aria-label=\"delete\" color=\"primary\"><InfoIcon /></IconButton>\r\n                    <div className={clsx({\r\n                        [classes.info]: infoSelect,\r\n                        [classes.hide]: !infoSelect,\r\n                    })} >\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox checked={checkedA} onChange={handleChange('checkedA')} value=\"checkedA\" />\r\n                            }\r\n                            label=\"Mute Chat\"\r\n                        />\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n\r\n                <List className={classes.padding}>\r\n                    {props.friendList.friends.map((text, index) => (\r\n                        <ListItem button key={index} selected={selectedIndex === text.friend} onClick={event => handleListItemClick(event, text)}>\r\n                            <ListItemIcon>\r\n                                <Badge\r\n                                    color=\"secondary\"\r\n                                    max={99}\r\n                                    badgeContent={randomNumber(index)}\r\n                                    anchorOrigin={{\r\n                                        horizontal,\r\n                                        vertical,\r\n                                    }}\r\n                                ><Avatar className={index % 2 === 0 ? classes.avatar : classes.orangeAvatar}>{slice(text.friend)}</Avatar></Badge></ListItemIcon>\r\n                            <ListItemText primary={text.friend} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n            </main>\r\n        </div >\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}