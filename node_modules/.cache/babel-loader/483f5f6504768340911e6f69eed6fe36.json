{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Dell\\\\messenger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect, useCallback } from 'react';\nexport default function useLongPress(callback = () => {}, ms = 300) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        startLongPress = _useState2[0],\n        setStartLongPress = _useState2[1];\n\n  useEffect(() => {\n    let timerId;\n\n    if (startLongPress) {\n      timerId = setTimeout(callback, ms);\n    } else {\n      clearTimeout(timerId);\n    }\n\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [startLongPress]);\n  const start = useCallback(() => {\n    setStartLongPress(true);\n  }, []);\n  const stop = useCallback(() => {\n    setStartLongPress(false);\n  }, []);\n  return {\n    onMouseDown: start,\n    onMouseUp: stop,\n    onMouseLeave: stop,\n    onTouchStart: start,\n    onTouchEnd: stop\n  };\n}","map":{"version":3,"sources":["C:\\Users\\Dell\\messenger\\src\\messenger-page\\useLongPress.js"],"names":["useState","useEffect","useCallback","useLongPress","callback","ms","startLongPress","setStartLongPress","timerId","setTimeout","clearTimeout","start","stop","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AAEA,eAAe,SAASC,YAAT,CAAsBC,QAAQ,GAAG,MAAM,CAAG,CAA1C,EAA4CC,EAAE,GAAG,GAAjD,EAAsD;AAAA,oBACrBL,QAAQ,CAAC,KAAD,CADa;AAAA;AAAA,QAC1DM,cAD0D;AAAA,QAC1CC,iBAD0C;;AAGjEN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,OAAJ;;AACA,QAAIF,cAAJ,EAAoB;AAChBE,MAAAA,OAAO,GAAGC,UAAU,CAACL,QAAD,EAAWC,EAAX,CAApB;AACH,KAFD,MAEO;AACHK,MAAAA,YAAY,CAACF,OAAD,CAAZ;AACH;;AAED,WAAO,MAAM;AACTE,MAAAA,YAAY,CAACF,OAAD,CAAZ;AACH,KAFD;AAGH,GAXQ,EAWN,CAACF,cAAD,CAXM,CAAT;AAaA,QAAMK,KAAK,GAAGT,WAAW,CAAC,MAAM;AAC5BK,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAFwB,EAEtB,EAFsB,CAAzB;AAGA,QAAMK,IAAI,GAAGV,WAAW,CAAC,MAAM;AAC3BK,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAFuB,EAErB,EAFqB,CAAxB;AAIA,SAAO;AACHM,IAAAA,WAAW,EAAEF,KADV;AAEHG,IAAAA,SAAS,EAAEF,IAFR;AAGHG,IAAAA,YAAY,EAAEH,IAHX;AAIHI,IAAAA,YAAY,EAAEL,KAJX;AAKHM,IAAAA,UAAU,EAAEL;AALT,GAAP;AAOH","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport default function useLongPress(callback = () => { }, ms = 300) {\r\n    const [startLongPress, setStartLongPress] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let timerId;\r\n        if (startLongPress) {\r\n            timerId = setTimeout(callback, ms);\r\n        } else {\r\n            clearTimeout(timerId);\r\n        }\r\n\r\n        return () => {\r\n            clearTimeout(timerId);\r\n        };\r\n    }, [startLongPress]);\r\n\r\n    const start = useCallback(() => {\r\n        setStartLongPress(true);\r\n    }, []);\r\n    const stop = useCallback(() => {\r\n        setStartLongPress(false);\r\n    }, []);\r\n\r\n    return {\r\n        onMouseDown: start,\r\n        onMouseUp: stop,\r\n        onMouseLeave: stop,\r\n        onTouchStart: start,\r\n        onTouchEnd: stop,\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}