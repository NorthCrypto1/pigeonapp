{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Dell\\\\messenger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Dell\\\\messenger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\messenger\\\\src\\\\profile-page\\\\profile.js\";\nimport React from \"react\";\nimport './profile.css';\nimport Login from './login';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport clsx from 'clsx';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport TuneIcon from '@material-ui/icons/Tune';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: 'auto',\n    width: '300px',\n    [theme.breakpoints.up('md')]: {\n      width: '500px'\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: '800px'\n    }\n  },\n  list: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    maxWidth: '300px',\n    [theme.breakpoints.up('md')]: {\n      maxWidth: '500px'\n    },\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: '800px'\n    }\n  },\n  listOpen: {\n    display: 'flex',\n    flexDirection: 'row',\n    width: '100%',\n    maxWidth: '300px',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    [theme.breakpoints.up('md')]: {\n      maxWidth: '500px'\n    },\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: '800px'\n    }\n  },\n  listItem: {\n    height: 90,\n    boxShadow: '2px 2px 3px 0px rgba(0,0,0,0.75)',\n    marginBottom: 5,\n    background: '#d9d8d7'\n  },\n  listText: {\n    margin: 'auto',\n    marginLeft: 25\n  },\n  toolbar: {\n    display: 'none'\n  },\n  toolbarOpen: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    backgroundColor: '#618fe8',\n    height: 40,\n    maxWidth: '300px',\n    [theme.breakpoints.up('md')]: {\n      maxWidth: '500px'\n    },\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: '800px'\n    }\n  },\n  button: {\n    margin: 'auto',\n    width: '100%'\n  }\n}));\nexport default function Profile() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        loggedIn = _React$useState2[0],\n        setLoggedIn = _React$useState2[1];\n\n  const _React$useState3 = React.useState(''),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        selectedIndex = _React$useState4[0],\n        setSelectedIndex = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        open = _React$useState6[0],\n        setOpen = _React$useState6[1];\n\n  const _React$useState7 = React.useState(false),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        signIn = _React$useState8[0],\n        setSignIn = _React$useState8[1];\n\n  const _React$useState9 = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: true\n  }),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        state = _React$useState10[0],\n        setState = _React$useState10[1];\n\n  const handleChange = name => event => {\n    setState(_objectSpread({}, state, {\n      [name]: event.target.checked\n    }));\n  };\n\n  function handleListItemClick(event, index) {\n    setSelectedIndex(index);\n    setOpen(true);\n  }\n\n  function handleListClose() {\n    setOpen(false);\n    setSelectedIndex('');\n  }\n\n  function openSignIn() {\n    setSignIn(true);\n  }\n\n  function logged() {\n    if (loggedIn !== true) {\n      return React.createElement(Button, {\n        variant: \"contained\",\n        className: classes.button + \" profile-login\",\n        onClick: openSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Sign In/Log In\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"profile-avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"H\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Username\"), React.createElement(\"span\", {\n        className: \"logout\",\n        onClick: () => {\n          setLoggedIn(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Log Out\"));\n    }\n  }\n\n  function handleCloseChange(e) {\n    setSignIn(e);\n  }\n\n  function loginPage() {\n    if (signIn === true) {\n      return React.createElement(Login, {\n        whenClose: handleCloseChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      });\n    }\n  }\n\n  function settingsPageChange() {\n    if (selectedIndex === 'Display') {\n      return React.createElement(FormControl, {\n        component: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: state.gilad,\n          onChange: handleChange('gilad'),\n          value: \"gilad\",\n          color: \"#23d160\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }),\n        label: \"Dark Mode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })));\n    } else if (selectedIndex === 'Privacy') {\n      return React.createElement(FormControl, {\n        component: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: state.gilad,\n          onChange: handleChange('gilad'),\n          value: \"gilad\",\n          color: \"#23d160\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }),\n        label: \"Encrypt All Messages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: state.gilad,\n          onChange: handleChange('gilad'),\n          value: \"gilad\",\n          color: \"#23d160\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }),\n        label: \"Enable 30 Day Data Burn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })));\n    } else if (selectedIndex === 'Notifications') {\n      return React.createElement(FormControl, {\n        component: \"fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: state.gilad,\n          onChange: handleChange('gilad'),\n          value: \"gilad\",\n          color: \"#23d160\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }),\n        label: \"Enable Notifications Sound\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: state.gilad,\n          onChange: handleChange('gilad'),\n          value: \"gilad\",\n          color: \"#23d160\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }),\n        label: \"Enable Unread Message Badge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      })));\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, loginPage(), logged(), React.createElement(\"div\", {\n    onClick: handleListClose,\n    className: clsx(classes.toolbar, {\n      [classes.toolbarOpen]: open,\n      [classes.toolbar]: !open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(ChevronLeftIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }))), React.createElement(List, {\n    className: clsx(classes.list, {\n      [classes.listOpen]: open,\n      [classes.list]: !open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    className: classes.listItem,\n    selected: selectedIndex === 'Display',\n    onClick: event => handleListItemClick(event, 'Display'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(TuneIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    className: classes.listText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Display\")), React.createElement(ListItem, {\n    button: true,\n    className: classes.listItem,\n    selected: selectedIndex === 'Privacy',\n    onClick: event => handleListItemClick(event, 'Privacy'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(LockOpenIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), \" \", React.createElement(ListItemText, {\n    className: classes.listText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"Privacy\")), React.createElement(ListItem, {\n    button: true,\n    className: classes.listItem,\n    selected: selectedIndex === 'Notifications',\n    onClick: event => handleListItemClick(event, 'Notifications'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(NotificationsActiveIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    className: classes.listText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Notifications\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, settingsPageChange()));\n}","map":{"version":3,"sources":["C:\\Users\\Dell\\messenger\\src\\profile-page\\profile.js"],"names":["React","Login","makeStyles","Avatar","ListItem","ListItemText","List","clsx","ChevronLeftIcon","IconButton","FormControl","FormGroup","FormControlLabel","Switch","Button","TuneIcon","LockOpenIcon","NotificationsActiveIcon","useStyles","theme","root","margin","width","breakpoints","up","list","display","flexDirection","maxWidth","listOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","listItem","height","boxShadow","marginBottom","background","listText","marginLeft","toolbar","toolbarOpen","alignItems","justifyContent","backgroundColor","button","Profile","classes","useState","loggedIn","setLoggedIn","selectedIndex","setSelectedIndex","open","setOpen","signIn","setSignIn","gilad","jason","antoine","state","setState","handleChange","name","event","target","checked","handleListItemClick","index","handleListClose","openSignIn","logged","handleCloseChange","e","loginPage","settingsPageChange"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport './profile.css';\r\nimport Login from './login';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport List from '@material-ui/core/List';\r\nimport clsx from 'clsx';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Button from '@material-ui/core/Button';\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: 'auto',\r\n        width: '300px',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width: '800px',\r\n        },\r\n    },\r\n    list: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        maxWidth: '300px',\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            maxWidth: '800px',\r\n        },\r\n    },\r\n    listOpen: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n        maxWidth: '300px',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            maxWidth: '800px',\r\n        },\r\n    },\r\n    listItem: {\r\n        height: 90,\r\n        boxShadow: '2px 2px 3px 0px rgba(0,0,0,0.75)',\r\n        marginBottom: 5,\r\n        background: '#d9d8d7',\r\n    },\r\n    listText: {\r\n        margin: 'auto',\r\n        marginLeft: 25,\r\n    },\r\n    toolbar: {\r\n        display: 'none',\r\n    },\r\n    toolbarOpen: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        backgroundColor: '#618fe8',\r\n        height: 40,\r\n        maxWidth: '300px',\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            maxWidth: '800px',\r\n        },\r\n    },\r\n    button: {\r\n        margin: 'auto',\r\n        width: '100%',\r\n    },\r\n}))\r\n\r\nexport default function Profile() {\r\n    const classes = useStyles();\r\n    const [loggedIn, setLoggedIn] = React.useState(false);\r\n    const [selectedIndex, setSelectedIndex] = React.useState('');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [signIn, setSignIn] = React.useState(false);\r\n    const [state, setState] = React.useState({\r\n        gilad: true,\r\n        jason: false,\r\n        antoine: true,\r\n    });\r\n\r\n    const handleChange = name => event => {\r\n        setState({ ...state, [name]: event.target.checked });\r\n    };\r\n\r\n    function handleListItemClick(event, index) {\r\n        setSelectedIndex(index);\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleListClose() {\r\n        setOpen(false);\r\n        setSelectedIndex('');\r\n    }\r\n    function openSignIn() {\r\n        setSignIn(true);\r\n    }\r\n\r\n    function logged() {\r\n        if (loggedIn !== true) {\r\n            return <Button variant=\"contained\" className={classes.button + ` profile-login`} onClick={openSignIn}>Sign In/Log In</Button>\r\n        } else {\r\n            return <div className=\"profile-avatar\"><Avatar>H</Avatar>\r\n                <span>Username</span><span className=\"logout\" onClick={() => { setLoggedIn(false); }}>Log Out</span></div>\r\n        }\r\n    }\r\n\r\n    function handleCloseChange(e) {\r\n        setSignIn(e);\r\n    }\r\n\r\n    function loginPage() {\r\n        if (signIn === true) {\r\n            return (<Login whenClose={handleCloseChange}></Login>)\r\n        }\r\n    }\r\n\r\n    function settingsPageChange() {\r\n        if (selectedIndex === 'Display') {\r\n            return <FormControl component=\"fieldset\">\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" color=\"#23d160\" />}\r\n                        label=\"Dark Mode\"\r\n                    />\r\n                </FormGroup>\r\n            </FormControl>\r\n        } else if (selectedIndex === 'Privacy') {\r\n            return <FormControl component=\"fieldset\">\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" color=\"#23d160\" />}\r\n                        label=\"Encrypt All Messages\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" color=\"#23d160\" />}\r\n                        label=\"Enable 30 Day Data Burn\"\r\n                    />\r\n                </FormGroup>\r\n            </FormControl>\r\n        } else if (selectedIndex === 'Notifications') {\r\n            return <FormControl component=\"fieldset\">\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" color=\"#23d160\" />}\r\n                        label=\"Enable Notifications Sound\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" color=\"#23d160\" />}\r\n                        label=\"Enable Unread Message Badge\"\r\n                    />\r\n                </FormGroup>\r\n            </FormControl>\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {loginPage()}\r\n            {logged()}\r\n            <div onClick={handleListClose} className={clsx(classes.toolbar, {\r\n                [classes.toolbarOpen]: open,\r\n                [classes.toolbar]: !open,\r\n            })}>\r\n                <IconButton >\r\n                    <ChevronLeftIcon />\r\n                </IconButton>\r\n            </div>\r\n            <List className={clsx(classes.list, {\r\n                [classes.listOpen]: open,\r\n                [classes.list]: !open,\r\n            })}>\r\n                <ListItem button className={classes.listItem} selected={selectedIndex === 'Display'}\r\n                    onClick={event => handleListItemClick(event, 'Display')}>\r\n                    <TuneIcon /><ListItemText className={classes.listText} >Display</ListItemText>\r\n                </ListItem>\r\n                <ListItem button className={classes.listItem} selected={selectedIndex === 'Privacy'}\r\n                    onClick={event => handleListItemClick(event, 'Privacy')}>\r\n                    <LockOpenIcon /> <ListItemText className={classes.listText} >Privacy</ListItemText>\r\n                </ListItem>\r\n                <ListItem button className={classes.listItem} selected={selectedIndex === 'Notifications'}\r\n                    onClick={event => handleListItemClick(event, 'Notifications')}>\r\n                    <NotificationsActiveIcon /><ListItemText className={classes.listText} >Notifications</ListItemText>\r\n                </ListItem>\r\n            </List>\r\n            <div>\r\n                {settingsPageChange()}\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}