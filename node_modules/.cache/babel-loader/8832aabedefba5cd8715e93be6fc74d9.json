{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\Dell\\\\messenger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\messenger\\\\src\\\\components\\\\DisplayConversation.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 0.21rem;\\n  img {\\n    height: 16px !important;\\n    width: 16px !important;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport emojione from 'emojione';\n\nclass DisplayConversation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      chat: [{\n        senderId: \"you\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.scrollToBottomLoad();\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  emojify(emoji) {\n    var emojy = emoji;\n    var regex = /(?:\\:)\\b(\\w*)\\b(?=\\:)/g;\n    var m = regex.exec(emojy);\n    var a = React.createElement(Emoji, {\n      className: \"ld-emoji\",\n      role: \"presentation\",\n      dangerouslySetInnerHTML: {\n        __html: emojione.unicodeToImage(m)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n    var emojify = emojy.replace(regex, a);\n    console.log(emojify);\n  }\n\n  scrollToBottom() {\n    this.el.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }\n\n  scrollToBottomLoad() {\n    this.el.scrollIntoView();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"displayConversation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.chat.map((message, index) => React.createElement(\"li\", {\n      key: index,\n      className: \"message \".concat(message.senderId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"message-text one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.emojify(message.text)))), React.createElement(\"div\", {\n      ref: el => {\n        this.el = el;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst Emoji = styled.span(_templateObject());\nexport default DisplayConversation;","map":{"version":3,"sources":["C:\\Users\\Dell\\messenger\\src\\components\\DisplayConversation.js"],"names":["React","Component","styled","emojione","DisplayConversation","constructor","state","chat","senderId","text","componentDidMount","scrollToBottomLoad","componentDidUpdate","scrollToBottom","emojify","emoji","emojy","regex","m","exec","a","__html","unicodeToImage","replace","console","log","el","scrollIntoView","behavior","render","map","message","index","Emoji","span"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,mBAAN,SAAkCH,SAAlC,CAA4C;AAC1CI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,QAAQ,EAAE,KADZ;AAEEC,QAAAA,IAAI,EAAE;AAFR,OADI,EAKJ;AACED,QAAAA,QAAQ,EAAE,OADZ;AAEEC,QAAAA,IAAI,EAAE;AAFR,OALI,EASJ;AACED,QAAAA,QAAQ,EAAE,OADZ;AAEEC,QAAAA,IAAI,EAAE;AAFR,OATI;AADK,KAAb;AAgBD;;AAGDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,kBAAL;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,cAAL;AACD;;AAEDC,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACb,QAAIC,KAAK,GAAGD,KAAZ;AACA,QAAIE,KAAK,GAAG,wBAAZ;AACA,QAAIC,CAAC,GAAGD,KAAK,CAACE,IAAN,CAAWH,KAAX,CAAR;AACA,QAAII,CAAC,GAAG,oBAAC,KAAD;AACN,MAAA,SAAS,EAAC,UADJ;AAEN,MAAA,IAAI,EAAC,cAFC;AAGN,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAElB,QAAQ,CAACmB,cAAT,CAAwBJ,CAAxB;AAAV,OAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAIA,QAAIJ,OAAO,GAAGE,KAAK,CAACO,OAAN,CAAcN,KAAd,EAAqBG,CAArB,CAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACD;;AAEDD,EAAAA,cAAc,GAAG;AACf,SAAKa,EAAL,CAAQC,cAAR,CAAuB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAvB;AACD;;AAEDjB,EAAAA,kBAAkB,GAAG;AACnB,SAAKe,EAAL,CAAQC,cAAR;AACD;;AACDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKvB,KAAL,CAAWC,IAAX,CAAgBuB,GAAhB,CAAoB,CAACC,OAAD,EAAUC,KAAV,KACnB;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAgB,MAAA,SAAS,oBAAaD,OAAO,CAACvB,QAArB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKM,OAAL,CAAaiB,OAAO,CAACtB,IAArB,CAAlC,CADF,CADD,CADH,EAME;AAAK,MAAA,GAAG,EAAEiB,EAAE,IAAI;AAAE,aAAKA,EAAL,GAAUA,EAAV;AAAe,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CADF;AAYD;;AA9DyC;;AAiE5C,MAAMO,KAAK,GAAG/B,MAAM,CAACgC,IAAV,mBAAX;AAWA,eAAe9B,mBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport emojione from 'emojione';\r\n\r\nclass DisplayConversation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      chat: [\r\n        {\r\n          senderId: \"you\",\r\n          text: \"testing testing testing :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"other\",\r\n          text: \"testing testing testing :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"other\",\r\n          text: \"testing testing  :face_with_head_bandage: :face_with_head_bandage: \",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.scrollToBottomLoad();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  emojify(emoji) {\r\n    var emojy = emoji\r\n    var regex = /(?:\\:)\\b(\\w*)\\b(?=\\:)/g;\r\n    var m = regex.exec(emojy)\r\n    var a = <Emoji\r\n      className='ld-emoji'\r\n      role='presentation'\r\n      dangerouslySetInnerHTML={{ __html: emojione.unicodeToImage(m) }} />\r\n    var emojify = emojy.replace(regex, a)\r\n    console.log(emojify);\r\n  }\r\n\r\n  scrollToBottom() {\r\n    this.el.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n\r\n  scrollToBottomLoad() {\r\n    this.el.scrollIntoView();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"displayConversation\" >\r\n        <ul >\r\n          {this.state.chat.map((message, index) => (\r\n            <li key={index} className={`message ${message.senderId}`}>\r\n              <p className=\"message-text one\" >{this.emojify(message.text)}</p>\r\n            </li>\r\n          ))}\r\n          <div ref={el => { this.el = el; }} />\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst Emoji = styled.span`\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0.21rem;\r\n  img {\r\n    height: 16px !important;\r\n    width: 16px !important;\r\n  }\r\n`\r\nexport default DisplayConversation;"]},"metadata":{},"sourceType":"module"}