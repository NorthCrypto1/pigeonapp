{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Dell\\\\messenger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\messenger\\\\src\\\\messenger-page\\\\displayChat.js\";\nimport React, { useEffect } from 'react';\nimport emojione from 'emojione';\nimport $ from \"jquery\";\nimport ClickNHold from 'react-click-n-hold';\nexport default function Chat(props) {\n  const chatText = props.chat;\n  const user = props.user;\n  let el = React.createRef();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        onClicked = _React$useState2[0],\n        setonClicked = _React$useState2[1];\n\n  useEffect(() => {\n    $(document).ready(function () {\n      $(\".message-text\").each(function () {\n        var original = $(this).html();\n        var converted = emojione.toImage(original);\n        $(this).html(converted);\n      });\n    });\n    el.current.scrollIntoView();\n  });\n\n  function userSort(value) {\n    if (value === user) {\n      return 'you';\n    } else {\n      return 'other';\n    }\n  }\n\n  function start(e) {\n    console.log('START');\n  }\n\n  function end(e, enough) {\n    console.log('END');\n    console.log(enough ? 'Click released after enough time' : 'Click released too soon');\n  }\n\n  function clickNHold(e) {\n    console.log('CLICK AND HOLD');\n    setonClicked(true);\n  }\n\n  function print() {\n    if (onClicked === true) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Hello\");\n    } else {\n      return console.log('hello');\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"displayConversation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, chatText.map((message, index) => React.createElement(ClickNHold, {\n    time: 2 // Time to keep pressing. Default is 2\n    ,\n    onStart: start // Start callback\n    ,\n    onClickNHold: clickNHold //Timeout callback\n    ,\n    onEnd: end,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    key: index,\n    className: \"message \".concat(userSort(message.senderId)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"message-text one\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, message.text)), print())), React.createElement(\"div\", {\n    ref: el,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:\\Users\\Dell\\messenger\\src\\messenger-page\\displayChat.js"],"names":["React","useEffect","emojione","$","ClickNHold","Chat","props","chatText","chat","user","el","createRef","useState","onClicked","setonClicked","document","ready","each","original","html","converted","toImage","current","scrollIntoView","userSort","value","start","e","console","log","end","enough","clickNHold","print","map","message","index","senderId","text"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport emojione from 'emojione';\r\nimport $ from \"jquery\";\r\nimport ClickNHold from 'react-click-n-hold';\r\n\r\nexport default function Chat(props) {\r\n    const chatText = props.chat;\r\n    const user = props.user;\r\n    let el = React.createRef();\r\n    const [onClicked, setonClicked] = React.useState(false)\r\n\r\n    useEffect(() => {\r\n        $(document).ready(function () {\r\n            $(\".message-text\").each(function () {\r\n                var original = $(this).html();\r\n                var converted = emojione.toImage(original);\r\n                $(this).html(converted);\r\n            });\r\n        });\r\n        el.current.scrollIntoView();\r\n    })\r\n\r\n    function userSort(value) {\r\n        if (value === user) {\r\n            return ('you');\r\n        } else {\r\n            return ('other');\r\n        }\r\n    }\r\n    function start(e) {\r\n        console.log('START');\r\n    }\r\n\r\n    function end(e, enough) {\r\n        console.log('END');\r\n        console.log(enough ? 'Click released after enough time' : 'Click released too soon');\r\n    }\r\n\r\n    function clickNHold(e) {\r\n        console.log('CLICK AND HOLD');\r\n        setonClicked(true);\r\n    }\r\n\r\n    function print() {\r\n        if (onClicked === true) {\r\n            return <span>Hello</span>\r\n        } else {\r\n            return console.log('hello');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"displayConversation\" >\r\n            <ul >\r\n                {chatText.map((message, index) => (\r\n                    <ClickNHold\r\n                        time={2} // Time to keep pressing. Default is 2\r\n                        onStart={start} // Start callback\r\n                        onClickNHold={clickNHold} //Timeout callback\r\n                        onEnd={end} >\r\n                        <li key={index} className={`message ${userSort(message.senderId)}`}>\r\n                            <p className=\"message-text one\" >{message.text}</p>\r\n                        </li>\r\n                        {print()}\r\n                    </ClickNHold>\r\n                ))}\r\n                <div ref={el} />\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}