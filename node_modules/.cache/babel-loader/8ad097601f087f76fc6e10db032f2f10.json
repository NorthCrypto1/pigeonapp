{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Dell\\\\messenger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\messenger\\\\src\\\\messenger-page\\\\displayChat.js\";\nimport React, { useEffect } from 'react';\nimport emojione from 'emojione';\nimport $ from \"jquery\";\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    position: 'relative'\n  },\n  paper: {\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function Chat(props) {\n  const chatText = props.chat;\n  const user = props.user;\n  let el = React.createRef();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        onClickedMessage = _React$useState2[0],\n        setClickedMessage = _React$useState2[1];\n\n  const classes = useStyles();\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        open = _React$useState4[0],\n        setOpen = _React$useState4[1];\n\n  function handleClick(e) {\n    setOpen(prev => !prev);\n    setClickedMessage(e);\n    console.log(onClickedMessage);\n  }\n\n  ;\n\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    $(document).ready(function () {\n      $(\".message-text\").each(function () {\n        var original = $(this).html();\n        var converted = emojione.toImage(original);\n        $(this).html(converted);\n      });\n    });\n    el.current.scrollIntoView();\n  });\n\n  function userSort(value) {\n    if (value === user) {\n      return 'you';\n    } else {\n      return 'other';\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"displayConversation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, chatText.map((message, index) => React.createElement(ClickAwayListener, {\n    key: index,\n    onClickAway: console.log('test'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: classes.wrapper + \" message \".concat(userSort(message.senderId)),\n    onDoubleClick: function handleClick() {\n      setOpen(prev => !prev);\n      let object = index + 'message';\n      var element = document.getElementById(object);\n\n      if (open) {\n        element.classList.remove('hidden');\n      } else {\n        element.classList.add('hidden');\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"message-text one\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, message.text), React.createElement(\"div\", {\n    id: index + \"message\",\n    className: classes.paper + ' hidden',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"hello\")))), React.createElement(\"div\", {\n    ref: el,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:\\Users\\Dell\\messenger\\src\\messenger-page\\displayChat.js"],"names":["React","useEffect","emojione","$","ClickAwayListener","clsx","makeStyles","useStyles","theme","wrapper","position","paper","padding","spacing","backgroundColor","palette","background","Chat","props","chatText","chat","user","el","createRef","useState","onClickedMessage","setClickedMessage","classes","open","setOpen","handleClick","e","prev","console","log","handleClickAway","document","ready","each","original","html","converted","toImage","current","scrollIntoView","userSort","value","map","message","index","senderId","object","element","getElementById","classList","remove","add","text"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport emojione from 'emojione';\r\nimport $ from \"jquery\";\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    wrapper: {\r\n        position: 'relative',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function Chat(props) {\r\n    const chatText = props.chat;\r\n    const user = props.user;\r\n    let el = React.createRef();\r\n    const [onClickedMessage, setClickedMessage] = React.useState(0);\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    function handleClick(e) {\r\n        setOpen(prev => !prev);\r\n        setClickedMessage(e);\r\n        console.log(onClickedMessage);\r\n    };\r\n\r\n    const handleClickAway = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        $(document).ready(function () {\r\n            $(\".message-text\").each(function () {\r\n                var original = $(this).html();\r\n                var converted = emojione.toImage(original);\r\n                $(this).html(converted);\r\n            });\r\n        });\r\n        el.current.scrollIntoView();\r\n    })\r\n\r\n    function userSort(value) {\r\n        if (value === user) {\r\n            return ('you');\r\n        } else {\r\n            return ('other');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"displayConversation\" >\r\n            <ul >\r\n                {chatText.map((message, index) => (\r\n                    <ClickAwayListener key={index} onClickAway={console.log('test')}>\r\n                        <li className={classes.wrapper + ` message ${userSort(message.senderId)}`} onDoubleClick={function handleClick() {\r\n                            setOpen(prev => !prev);\r\n                            let object = index + 'message';\r\n                            var element = document.getElementById(object);\r\n                            if (open) {\r\n                                element.classList.remove('hidden');\r\n                            } else {\r\n                                element.classList.add('hidden');\r\n                            }\r\n                        }}>\r\n                            <p className=\"message-text one\" >{message.text}</p>\r\n                            <div id={index + \"message\"} className={classes.paper + ' hidden'}>hello</div>\r\n                        </li>\r\n                    </ClickAwayListener>\r\n                ))}\r\n                <div ref={el} />\r\n            </ul>\r\n        </div >\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}