{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\Dell\\\\messenger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\messenger\\\\src\\\\components\\\\DisplayConversation.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 0.21rem;\\n  img {\\n    height: 16px !important;\\n    width: 16px !important;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport emojione from 'emojione';\n\nclass DisplayConversation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      chat: [{\n        senderId: \"you\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing testing :face_with_head_bandage: \"\n      }, {\n        senderId: \"other\",\n        text: \"testing testing\" + React.createElement(Emoji, {\n          className: \"ld-emoji\",\n          key: index,\n          role: \"presentation\",\n          onClick: this.onEmojiSelect.bind(this),\n          dangerouslySetInnerHTML: {\n            __html: emojione.unicodeToImage(emoji)\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }) + \"testing :face_with_head_bandage: \"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.scrollToBottomLoad();\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom() {\n    this.el.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }\n\n  scrollToBottomLoad() {\n    this.el.scrollIntoView();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"displayConversation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.chat.map((message, index) => React.createElement(\"li\", {\n      key: index,\n      className: \"message \".concat(message.senderId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"message-text one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, message.text))), React.createElement(\"div\", {\n      ref: el => {\n        this.el = el;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst Emoji = styled.span(_templateObject());\nexport default DisplayConversation;","map":{"version":3,"sources":["C:\\Users\\Dell\\messenger\\src\\components\\DisplayConversation.js"],"names":["React","Component","emojione","DisplayConversation","constructor","state","chat","senderId","text","index","onEmojiSelect","bind","__html","unicodeToImage","emoji","componentDidMount","scrollToBottomLoad","componentDidUpdate","scrollToBottom","el","scrollIntoView","behavior","render","map","message","Emoji","styled","span"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,mBAAN,SAAkCF,SAAlC,CAA4C;AAC1CG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,QAAQ,EAAE,KADZ;AAEEC,QAAAA,IAAI,EAAE;AAFR,OADI,EAKJ;AACED,QAAAA,QAAQ,EAAE,OADZ;AAEEC,QAAAA,IAAI,EAAE;AAFR,OALI,EASJ;AACED,QAAAA,QAAQ,EAAE,OADZ;AAEEC,QAAAA,IAAI,EAAE,oBAAoB,oBAAC,KAAD;AACxB,UAAA,SAAS,EAAC,UADc;AAExB,UAAA,GAAG,EAAEC,KAFmB;AAGxB,UAAA,IAAI,EAAC,cAHmB;AAIxB,UAAA,OAAO,EAAE,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAJe;AAKxB,UAAA,uBAAuB,EAAE;AAAEC,YAAAA,MAAM,EAAEV,QAAQ,CAACW,cAAT,CAAwBC,KAAxB;AAAV,WALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAApB,GAKsE;AAP9E,OATI;AADK,KAAb;AAqBD;;AAGDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,kBAAL;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,cAAL;AACD;;AAEDA,EAAAA,cAAc,GAAG;AACf,SAAKC,EAAL,CAAQC,cAAR,CAAuB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAvB;AACD;;AAEDL,EAAAA,kBAAkB,GAAG;AACnB,SAAKG,EAAL,CAAQC,cAAR;AACD;;AACDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjB,KAAL,CAAWC,IAAX,CAAgBiB,GAAhB,CAAoB,CAACC,OAAD,EAAUf,KAAV,KACnB;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAgB,MAAA,SAAS,oBAAae,OAAO,CAACjB,QAArB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCiB,OAAO,CAAChB,IAA1C,CADF,CADD,CADH,EAME;AAAK,MAAA,GAAG,EAAEW,EAAE,IAAI;AAAE,aAAKA,EAAL,GAAUA,EAAV;AAAe,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CADF;AAYD;;AAvDyC;;AA0D5C,MAAMM,KAAK,GAAGC,MAAM,CAACC,IAAV,mBAAX;AAWA,eAAexB,mBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport emojione from 'emojione'\r\n\r\nclass DisplayConversation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      chat: [\r\n        {\r\n          senderId: \"you\",\r\n          text: \"testing testing testing :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"other\",\r\n          text: \"testing testing testing :face_with_head_bandage: \",\r\n        },\r\n        {\r\n          senderId: \"other\",\r\n          text: \"testing testing\" + <Emoji\r\n            className='ld-emoji'\r\n            key={index}\r\n            role='presentation'\r\n            onClick={this.onEmojiSelect.bind(this)}\r\n            dangerouslySetInnerHTML={{ __html: emojione.unicodeToImage(emoji) }} /> + \"testing :face_with_head_bandage: \",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.scrollToBottomLoad();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  scrollToBottom() {\r\n    this.el.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n\r\n  scrollToBottomLoad() {\r\n    this.el.scrollIntoView();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"displayConversation\" >\r\n        <ul >\r\n          {this.state.chat.map((message, index) => (\r\n            <li key={index} className={`message ${message.senderId}`}>\r\n              <p className=\"message-text one\" >{message.text}</p>\r\n            </li>\r\n          ))}\r\n          <div ref={el => { this.el = el; }} />\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst Emoji = styled.span`\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0.21rem;\r\n  img {\r\n    height: 16px !important;\r\n    width: 16px !important;\r\n  }\r\n`\r\nexport default DisplayConversation;"]},"metadata":{},"sourceType":"module"}