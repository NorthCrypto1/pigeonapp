{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Dell\\\\messenger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\messenger\\\\src\\\\messenger-page\\\\displayChat.js\";\nimport React, { useEffect } from 'react';\nimport emojione from 'emojione';\nimport $ from \"jquery\";\nimport ClickNHold from 'react-click-n-hold';\nexport default function Chat(props) {\n  const chatText = props.chat;\n  const user = props.user;\n  let el = React.createRef();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        onClicked = _React$useState2[0],\n        setOnClicked = _React$useState2[1];\n\n  const _React$useState3 = React.useState(),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        onClickedMessage = _React$useState4[0],\n        setClickedMessage = _React$useState4[1];\n\n  useEffect(() => {\n    $(document).ready(function () {\n      $(\".message-text\").each(function () {\n        var original = $(this).html();\n        var converted = emojione.toImage(original);\n        $(this).html(converted);\n      });\n    });\n    el.current.scrollIntoView();\n    document.addEventListener('mousedown', handleClickOutside);\n  });\n\n  function userSort(value) {\n    if (value === user) {\n      return 'you';\n    } else {\n      return 'other';\n    }\n  }\n\n  function start(e) {\n    console.log('START');\n  }\n\n  function end(e, enough) {\n    console.log('END');\n    console.log(enough ? 'Click released after enough time' : 'Click released too soon');\n  }\n\n  function test(index) {\n    if (onClickedMessage === index && onClicked === true) {\n      return '';\n    } else {\n      return 'hidden';\n    }\n  }\n\n  function setWrapperRef(node) {\n    wrapperRef = node;\n  }\n\n  function handleClickOutside(event) {\n    if (wrapperRef && !wrapperRef.contains(event.target) && onClicked === true) {\n      setOnClicked(false);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"displayConversation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, chatText.map((message, index) => React.createElement(ClickNHold, {\n    key: index,\n    time: .25 // Time to keep pressing. Default is 2\n    ,\n    onStart: start // Start callback\n    ,\n    onClickNHold: function clickNHold(e) {\n      console.log('CLICK AND HOLD');\n      setOnClicked(true);\n      setClickedMessage(index);\n      console.log(onClickedMessage);\n    } //Timeout callback\n    ,\n    onEnd: end,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \" message \".concat(userSort(message.senderId)),\n    ref: setWrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"message-text one\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, message.text), React.createElement(\"div\", {\n    className: test(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Hello\")))), React.createElement(\"div\", {\n    ref: el,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:\\Users\\Dell\\messenger\\src\\messenger-page\\displayChat.js"],"names":["React","useEffect","emojione","$","ClickNHold","Chat","props","chatText","chat","user","el","createRef","useState","onClicked","setOnClicked","onClickedMessage","setClickedMessage","document","ready","each","original","html","converted","toImage","current","scrollIntoView","addEventListener","handleClickOutside","userSort","value","start","e","console","log","end","enough","test","index","setWrapperRef","node","wrapperRef","event","contains","target","map","message","clickNHold","senderId","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAChC,QAAMC,QAAQ,GAAGD,KAAK,CAACE,IAAvB;AACA,QAAMC,IAAI,GAAGH,KAAK,CAACG,IAAnB;AACA,MAAIC,EAAE,GAAGV,KAAK,CAACW,SAAN,EAAT;;AAHgC,0BAIEX,KAAK,CAACY,QAAN,CAAe,KAAf,CAJF;AAAA;AAAA,QAIzBC,SAJyB;AAAA,QAIdC,YAJc;;AAAA,2BAKcd,KAAK,CAACY,QAAN,EALd;AAAA;AAAA,QAKzBG,gBALyB;AAAA,QAKPC,iBALO;;AAOhCf,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,CAAC,CAACc,QAAD,CAAD,CAAYC,KAAZ,CAAkB,YAAY;AAC1Bf,MAAAA,CAAC,CAAC,eAAD,CAAD,CAAmBgB,IAAnB,CAAwB,YAAY;AAChC,YAAIC,QAAQ,GAAGjB,CAAC,CAAC,IAAD,CAAD,CAAQkB,IAAR,EAAf;AACA,YAAIC,SAAS,GAAGpB,QAAQ,CAACqB,OAAT,CAAiBH,QAAjB,CAAhB;AACAjB,QAAAA,CAAC,CAAC,IAAD,CAAD,CAAQkB,IAAR,CAAaC,SAAb;AACH,OAJD;AAKH,KAND;AAOAZ,IAAAA,EAAE,CAACc,OAAH,CAAWC,cAAX;AACAR,IAAAA,QAAQ,CAACS,gBAAT,CAA0B,WAA1B,EAAuCC,kBAAvC;AACH,GAVQ,CAAT;;AAYA,WAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAIA,KAAK,KAAKpB,IAAd,EAAoB;AAChB,aAAQ,KAAR;AACH,KAFD,MAEO;AACH,aAAQ,OAAR;AACH;AACJ;;AACD,WAASqB,KAAT,CAAeC,CAAf,EAAkB;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AAED,WAASC,GAAT,CAAaH,CAAb,EAAgBI,MAAhB,EAAwB;AACpBH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAM,GAAG,kCAAH,GAAwC,yBAA1D;AACH;;AAED,WAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,QAAItB,gBAAgB,KAAKsB,KAArB,IAA8BxB,SAAS,KAAK,IAAhD,EAAsD;AAClD,aAAO,EAAP;AACH,KAFD,MAEO;AACH,aAAO,QAAP;AACH;AACJ;;AAED,WAASyB,aAAT,CAAuBC,IAAvB,EAA6B;AACzBC,IAAAA,UAAU,GAAGD,IAAb;AACH;;AAED,WAASZ,kBAAT,CAA4Bc,KAA5B,EAAmC;AAC/B,QAAID,UAAU,IAAI,CAACA,UAAU,CAACE,QAAX,CAAoBD,KAAK,CAACE,MAA1B,CAAf,IAAoD9B,SAAS,KAAK,IAAtE,EAA4E;AACxEC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ;;AAGD,SACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,QAAQ,CAACqC,GAAT,CAAa,CAACC,OAAD,EAAUR,KAAV,KACV,oBAAC,UAAD;AACI,IAAA,GAAG,EAAEA,KADT;AAEI,IAAA,IAAI,EAAE,GAFV,CAEe;AAFf;AAGI,IAAA,OAAO,EAAEP,KAHb,CAGoB;AAHpB;AAII,IAAA,YAAY,EAAE,SAASgB,UAAT,CAAoBf,CAApB,EAAuB;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAnB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,MAAAA,iBAAiB,CAACqB,KAAD,CAAjB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYlB,gBAAZ;AACH,KATL,CASO;AATP;AAUI,IAAA,KAAK,EAAEmB,GAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWI;AAAI,IAAA,SAAS,qBAAcN,QAAQ,CAACiB,OAAO,CAACE,QAAT,CAAtB,CAAb;AAAyD,IAAA,GAAG,EAAET,aAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCO,OAAO,CAACG,IAA1C,CADJ,EAEI;AAAK,IAAA,SAAS,EAAEZ,IAAI,CAACC,KAAD,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CAXJ,CADH,CADL,EAmBI;AAAK,IAAA,GAAG,EAAE3B,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,CADJ,CADJ;AA0BH","sourcesContent":["import React, { useEffect } from 'react';\r\nimport emojione from 'emojione';\r\nimport $ from \"jquery\";\r\nimport ClickNHold from 'react-click-n-hold';\r\n\r\nexport default function Chat(props) {\r\n    const chatText = props.chat;\r\n    const user = props.user;\r\n    let el = React.createRef();\r\n    const [onClicked, setOnClicked] = React.useState(false);\r\n    const [onClickedMessage, setClickedMessage] = React.useState();\r\n\r\n    useEffect(() => {\r\n        $(document).ready(function () {\r\n            $(\".message-text\").each(function () {\r\n                var original = $(this).html();\r\n                var converted = emojione.toImage(original);\r\n                $(this).html(converted);\r\n            });\r\n        });\r\n        el.current.scrollIntoView();\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n    })\r\n\r\n    function userSort(value) {\r\n        if (value === user) {\r\n            return ('you');\r\n        } else {\r\n            return ('other');\r\n        }\r\n    }\r\n    function start(e) {\r\n        console.log('START');\r\n    }\r\n\r\n    function end(e, enough) {\r\n        console.log('END');\r\n        console.log(enough ? 'Click released after enough time' : 'Click released too soon');\r\n    }\r\n\r\n    function test(index) {\r\n        if (onClickedMessage === index && onClicked === true) {\r\n            return '';\r\n        } else {\r\n            return 'hidden';\r\n        }\r\n    }\r\n\r\n    function setWrapperRef(node) {\r\n        wrapperRef = node;\r\n    }\r\n\r\n    function handleClickOutside(event) {\r\n        if (wrapperRef && !wrapperRef.contains(event.target) && onClicked === true) {\r\n            setOnClicked(false);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"displayConversation\" >\r\n            <ul >\r\n                {chatText.map((message, index) => (\r\n                    <ClickNHold\r\n                        key={index}\r\n                        time={.25} // Time to keep pressing. Default is 2\r\n                        onStart={start} // Start callback\r\n                        onClickNHold={function clickNHold(e) {\r\n                            console.log('CLICK AND HOLD');\r\n                            setOnClicked(true)\r\n                            setClickedMessage(index)\r\n                            console.log(onClickedMessage);\r\n                        }} //Timeout callback\r\n                        onEnd={end} >\r\n                        <li className={` message ${userSort(message.senderId)}`} ref={setWrapperRef}>\r\n                            <p className=\"message-text one\" >{message.text}</p>\r\n                            <div className={test(index)}>Hello</div>\r\n                        </li>\r\n                    </ClickNHold>\r\n                ))}\r\n                <div ref={el} />\r\n            </ul>\r\n        </div >\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}