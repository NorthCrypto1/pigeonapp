{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\messenger\\\\src\\\\messenger-page\\\\displayChat.js\";\nimport React, { useEffect } from 'react';\nimport emojione from 'emojione';\nimport $ from \"jquery\";\nimport Message from './message';\nexport default function Chat(props) {\n  const chatText = props.chat;\n  const user = props.user;\n  let el = React.createRef();\n  useEffect(() => {\n    $(document).ready(function () {\n      $(\".message-text\").each(function () {\n        var original = $(this).html();\n        var converted = emojione.toImage(original);\n        $(this).html(converted);\n      });\n    });\n    el.current.scrollIntoView();\n  });\n\n  function userSort(value) {\n    if (value === user) {\n      return 'you';\n    } else {\n      return 'other';\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"displayConversation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, chatText.map((message, index) => React.createElement(Message, {\n    senderId: userSort(message.senderId),\n    text: message.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    ref: el,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:\\Users\\Dell\\messenger\\src\\messenger-page\\displayChat.js"],"names":["React","useEffect","emojione","$","Message","Chat","props","chatText","chat","user","el","createRef","document","ready","each","original","html","converted","toImage","current","scrollIntoView","userSort","value","map","message","index","senderId","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAChC,QAAMC,QAAQ,GAAGD,KAAK,CAACE,IAAvB;AACA,QAAMC,IAAI,GAAGH,KAAK,CAACG,IAAnB;AACA,MAAIC,EAAE,GAAGV,KAAK,CAACW,SAAN,EAAT;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,CAAC,CAACS,QAAD,CAAD,CAAYC,KAAZ,CAAkB,YAAY;AAC1BV,MAAAA,CAAC,CAAC,eAAD,CAAD,CAAmBW,IAAnB,CAAwB,YAAY;AAChC,YAAIC,QAAQ,GAAGZ,CAAC,CAAC,IAAD,CAAD,CAAQa,IAAR,EAAf;AACA,YAAIC,SAAS,GAAGf,QAAQ,CAACgB,OAAT,CAAiBH,QAAjB,CAAhB;AACAZ,QAAAA,CAAC,CAAC,IAAD,CAAD,CAAQa,IAAR,CAAaC,SAAb;AACH,OAJD;AAKH,KAND;AAOAP,IAAAA,EAAE,CAACS,OAAH,CAAWC,cAAX;AACH,GATQ,CAAT;;AAWA,WAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAIA,KAAK,KAAKb,IAAd,EAAoB;AAChB,aAAQ,KAAR;AACH,KAFD,MAEO;AACH,aAAQ,OAAR;AACH;AACJ;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QAAQ,CAACgB,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KACV,oBAAC,OAAD;AACI,IAAA,QAAQ,EAAEJ,QAAQ,CAACG,OAAO,CAACE,QAAT,CADtB;AAEI,IAAA,IAAI,EAAEF,OAAO,CAACG,IAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,EAOI;AAAK,IAAA,GAAG,EAAEjB,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ,CADJ;AAcH","sourcesContent":["import React, { useEffect } from 'react';\r\nimport emojione from 'emojione';\r\nimport $ from \"jquery\";\r\nimport Message from './message';\r\n\r\nexport default function Chat(props) {\r\n    const chatText = props.chat;\r\n    const user = props.user;\r\n    let el = React.createRef();\r\n\r\n    useEffect(() => {\r\n        $(document).ready(function () {\r\n            $(\".message-text\").each(function () {\r\n                var original = $(this).html();\r\n                var converted = emojione.toImage(original);\r\n                $(this).html(converted);\r\n            });\r\n        });\r\n        el.current.scrollIntoView();\r\n    })\r\n\r\n    function userSort(value) {\r\n        if (value === user) {\r\n            return ('you');\r\n        } else {\r\n            return ('other');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"displayConversation\" >\r\n            <ul >\r\n                {chatText.map((message, index) => (\r\n                    <Message\r\n                        senderId={userSort(message.senderId)}\r\n                        text={message.text}\r\n                    />\r\n                ))}\r\n                <div ref={el} />\r\n            </ul>\r\n        </div >\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}