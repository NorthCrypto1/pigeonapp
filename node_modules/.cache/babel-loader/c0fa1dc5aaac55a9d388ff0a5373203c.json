{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Dell\\\\messenger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\messenger\\\\src\\\\profile-page\\\\profile.js\";\nimport React from \"react\";\nimport './profile.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport clsx from 'clsx';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport IconButton from '@material-ui/core/IconButton'; //Sign in/login\n//Avatar\n//Username\n//settings -- dark mode\n//Notification\n// \n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%'\n  },\n  list: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: '100%',\n    maxWidth: '300px',\n    [theme.breakpoints.up('md')]: {\n      maxWidth: '500px'\n    },\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: '800px'\n    }\n  },\n  listOpen: {\n    display: 'flex',\n    flexDirection: 'row',\n    margin: 'auto',\n    width: '100%',\n    maxWidth: '300px',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    [theme.breakpoints.up('md')]: {\n      maxWidth: '500px'\n    },\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: '800px'\n    }\n  },\n  listItem: {\n    height: 90,\n    boxShadow: '0px 1px 0px 0px rgba(0,0,0,0.75)'\n  },\n  listText: {\n    margin: 'auto'\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    backgroundColor: '#618fe8',\n    margin: 'auto',\n    height: 40,\n    maxWidth: '300px',\n    [theme.breakpoints.up('md')]: {\n      maxWidth: '500px'\n    },\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: '800px'\n    }\n  }\n}));\nexport default function Profile() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        loggedIn = _React$useState2[0],\n        setLoggedIn = _React$useState2[1];\n\n  const _React$useState3 = React.useState(''),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        selectedIndex = _React$useState4[0],\n        setSelectedIndex = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        open = _React$useState6[0],\n        setOpen = _React$useState6[1];\n\n  function handleListItemClick(event, index) {\n    setSelectedIndex(index);\n    setOpen(true);\n  }\n\n  function handleListClose() {\n    setOpen(false);\n  }\n\n  function logged() {\n    if (loggedIn !== true) {\n      return React.createElement(\"div\", {\n        className: \"profile-login-avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Sign In/Log In\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"profile-avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"H\"));\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleListClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(ChevronLeftIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }))), React.createElement(List, {\n    className: clsx(classes.list, {\n      [classes.listOpen]: open,\n      [classes.list]: !open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, ['Display', 'Privacy', 'Notifications'].map((text, index) => React.createElement(ListItem, {\n    button: true,\n    key: text,\n    className: classes.listItem,\n    selected: selectedIndex === text,\n    onClick: event => handleListItemClick(event, text),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    className: classes.listText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, text)))));\n}","map":{"version":3,"sources":["C:\\Users\\Dell\\messenger\\src\\profile-page\\profile.js"],"names":["React","makeStyles","Avatar","ListItem","ListItemText","List","clsx","ChevronLeftIcon","IconButton","useStyles","theme","root","width","height","list","display","flexDirection","margin","maxWidth","breakpoints","up","listOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","listItem","boxShadow","listText","toolbar","alignItems","justifyContent","backgroundColor","Profile","classes","useState","loggedIn","setLoggedIn","selectedIndex","setSelectedIndex","open","setOpen","handleListItemClick","event","index","handleListClose","logged","map","text"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport './profile.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport List from '@material-ui/core/List';\r\nimport clsx from 'clsx';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\n//Sign in/login\r\n//Avatar\r\n//Username\r\n//settings -- dark mode\r\n//Notification\r\n// \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    list: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: 'auto',\r\n        width: '100%',\r\n        maxWidth: '300px',\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            maxWidth: '800px',\r\n        },\r\n    },\r\n    listOpen: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        margin: 'auto',\r\n        width: '100%',\r\n        maxWidth: '300px',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            maxWidth: '800px',\r\n        },\r\n    },\r\n    listItem: {\r\n        height: 90,\r\n        boxShadow: '0px 1px 0px 0px rgba(0,0,0,0.75)',\r\n    },\r\n    listText: {\r\n        margin: 'auto',\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        backgroundColor: '#618fe8',\r\n        margin: 'auto',\r\n        height: 40,\r\n        maxWidth: '300px',\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            maxWidth: '800px',\r\n        },\r\n    },\r\n}))\r\n\r\nexport default function Profile() {\r\n    const classes = useStyles();\r\n    const [loggedIn, setLoggedIn] = React.useState(true);\r\n    const [selectedIndex, setSelectedIndex] = React.useState('');\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    function handleListItemClick(event, index) {\r\n        setSelectedIndex(index);\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleListClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    function logged() {\r\n        if (loggedIn !== true) {\r\n            return <div className=\"profile-login-avatar\">Sign In/Log In</div>\r\n        } else {\r\n            return <div className=\"profile-avatar\"><Avatar>H</Avatar></div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.toolbar}>\r\n                <IconButton onClick={handleListClose}>\r\n                    <ChevronLeftIcon />\r\n                </IconButton>\r\n            </div>\r\n            <List className={clsx(classes.list, {\r\n                [classes.listOpen]: open,\r\n                [classes.list]: !open,\r\n            })}>\r\n                {['Display', 'Privacy', 'Notifications'].map((text, index) => (\r\n                    <ListItem button key={text} className={classes.listItem} selected={selectedIndex === text}\r\n                        onClick={event => handleListItemClick(event, text)}>\r\n                        <ListItemText className={classes.listText} >{text}</ListItemText>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}