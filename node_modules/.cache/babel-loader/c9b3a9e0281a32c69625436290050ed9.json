{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Dell\\\\messenger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Dell\\\\messenger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\messenger\\\\src\\\\profile-page\\\\profile.js\";\nimport React from \"react\";\nimport './profile.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport clsx from 'clsx';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport IconButton from '@material-ui/core/IconButton'; //Sign in/login\n//Avatar\n//Username\n//settings -- dark mode\n//Notification\n// \n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: '100%',\n    maxWidth: '300px',\n    [theme.breakpoints.up('md')]: {\n      maxWidth: '500px'\n    },\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: '800px'\n    }\n  },\n  listOpen: {\n    display: 'flex',\n    flexDirection: 'row',\n    margin: 'auto',\n    width: '100%',\n    maxWidth: '300px',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    [theme.breakpoints.up('md')]: {\n      maxWidth: '500px'\n    },\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: '800px'\n    }\n  },\n  listItem: {\n    height: 90,\n    boxShadow: '0px 1px 0px 0px rgba(0,0,0,0.75)'\n  },\n  listText: {\n    margin: 'auto',\n    fontSize: '1rem',\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '.2rem'\n    }\n  },\n  toolbar: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    backgroundColor: '#618fe8',\n    padding: theme.spacing(0, 1)\n  }, theme.mixins.toolbar)\n}));\nexport default function Profile() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        loggedIn = _React$useState2[0],\n        setLoggedIn = _React$useState2[1];\n\n  const _React$useState3 = React.useState(''),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        selectedIndex = _React$useState4[0],\n        setSelectedIndex = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        open = _React$useState6[0],\n        setOpen = _React$useState6[1];\n\n  function handleListItemClick(event, index) {\n    setSelectedIndex(index);\n    setOpen(true);\n  }\n\n  function handleListClose() {\n    setOpen(false);\n  }\n\n  function logged() {\n    if (loggedIn !== true) {\n      return React.createElement(\"div\", {\n        className: \"profile-login-avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Sign In/Log In\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"profile-avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"H\"));\n    }\n  }\n\n  return React.createElement(List, {\n    className: clsx(classes.list, {\n      [classes.listOpen]: open,\n      [classes.list]: !open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, ['Display', 'Privacy', 'Notifications'].map((text, index) => React.createElement(ListItem, {\n    button: true,\n    key: text,\n    className: classes.listItem,\n    selected: selectedIndex === text,\n    onClick: event => handleListItemClick(event, text),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    className: classes.listText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, text))), React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleListClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(ChevronLeftIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["C:\\Users\\Dell\\messenger\\src\\profile-page\\profile.js"],"names":["React","makeStyles","Avatar","ListItem","ListItemText","List","clsx","ChevronLeftIcon","IconButton","useStyles","theme","list","display","flexDirection","margin","width","maxWidth","breakpoints","up","listOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","listItem","height","boxShadow","listText","fontSize","toolbar","alignItems","justifyContent","backgroundColor","padding","spacing","mixins","Profile","classes","useState","loggedIn","setLoggedIn","selectedIndex","setSelectedIndex","open","setOpen","handleListItemClick","event","index","handleListClose","logged","map","text"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport './profile.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport List from '@material-ui/core/List';\r\nimport clsx from 'clsx';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\n//Sign in/login\r\n//Avatar\r\n//Username\r\n//settings -- dark mode\r\n//Notification\r\n// \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    list: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: 'auto',\r\n        width: '100%',\r\n        maxWidth: '300px',\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            maxWidth: '800px',\r\n        },\r\n    },\r\n    listOpen: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        margin: 'auto',\r\n        width: '100%',\r\n        maxWidth: '300px',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: '500px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            maxWidth: '800px',\r\n        },\r\n    },\r\n    listItem: {\r\n        height: 90,\r\n        boxShadow: '0px 1px 0px 0px rgba(0,0,0,0.75)',\r\n    },\r\n    listText: {\r\n        margin: 'auto',\r\n        fontSize: '1rem',\r\n        [theme.breakpoints.up('sm')]: {\r\n            fontSize: '.2rem',\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        backgroundColor: '#618fe8',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n}))\r\n\r\nexport default function Profile() {\r\n    const classes = useStyles();\r\n    const [loggedIn, setLoggedIn] = React.useState(true);\r\n    const [selectedIndex, setSelectedIndex] = React.useState('');\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    function handleListItemClick(event, index) {\r\n        setSelectedIndex(index);\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleListClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    function logged() {\r\n        if (loggedIn !== true) {\r\n            return <div className=\"profile-login-avatar\">Sign In/Log In</div>\r\n        } else {\r\n            return <div className=\"profile-avatar\"><Avatar>H</Avatar></div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <List className={clsx(classes.list, {\r\n            [classes.listOpen]: open,\r\n            [classes.list]: !open,\r\n        })}>\r\n            {['Display', 'Privacy', 'Notifications'].map((text, index) => (\r\n                <ListItem button key={text} className={classes.listItem} selected={selectedIndex === text}\r\n                    onClick={event => handleListItemClick(event, text)}>\r\n                    <ListItemText className={classes.listText} >{text}</ListItemText>\r\n                </ListItem>\r\n            ))}\r\n            <div className={classes.toolbar}>\r\n                <IconButton onClick={handleListClose}>\r\n                    <ChevronLeftIcon />\r\n                </IconButton>\r\n            </div>\r\n        </List>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}